{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\controller\\specification.js"
    ],
    "names": [
        "Base",
        "require",
        "module",
        "exports",
        "indexAction",
        "model",
        "data",
        "where",
        "id",
        "select",
        "success",
        "getGoodsSpecAction",
        "post",
        "goods_id",
        "is_delete",
        "specData",
        "specification_id",
        "item",
        "goods_spec_id",
        "goods_specification_ids",
        "specValueData",
        "find",
        "value",
        "dataInfo",
        "specValue",
        "productUpdateAction",
        "goods_number",
        "goods_weight",
        "goods_sn",
        "retail_price",
        "cost",
        "updateInfo",
        "update",
        "idData",
        "field",
        "goods_specification_id",
        "info",
        "pro",
        "length",
        "goodsNum",
        "sum",
        "maxPrice",
        "max",
        "minPrice",
        "min",
        "maxCost",
        "minCost",
        "goodsPrice",
        "costPrice",
        "cost_price",
        "min_retail_price",
        "min_cost_price",
        "productDeleAction",
        "productId",
        "limit",
        "delete",
        "lastData",
        "delePrimarySpecAction",
        "detailAction",
        "addAction",
        "sort",
        "name",
        "sort_order",
        "add",
        "checkSnAction",
        "sn",
        "fail",
        "updateAction",
        "deleteAction",
        "goods_spec",
        "console",
        "log"
    ],
    "mappings": ";;AAAA,MAAMA,OAAOC,QAAQ,WAAR,CAAb;AACAC,OAAOC,OAAP,GAAiB,cAAcH,IAAd,CAAmB;AAChC;;;;AAIMI,eAAN,GAAoB;AAAA;;AAAA;AAChB,kBAAMC,QAAQ,MAAKA,KAAL,CAAW,eAAX,CAAd;AACA,kBAAMC,OAAO,MAAMD,MAAME,KAAN,CAAY;AAC3BC,oBAAI,CAAC,GAAD,EAAM,CAAN;AADuB,aAAZ,EAEhBC,MAFgB,EAAnB;AAGA,mBAAO,MAAKC,OAAL,CAAaJ,IAAb,CAAP;AALgB;AAMnB;AACKK,sBAAN,GAA2B;AAAA;;AAAA;AACvB,kBAAMH,KAAK,OAAKI,IAAL,CAAU,IAAV,CAAX;AACA,kBAAMP,QAAQ,OAAKA,KAAL,CAAW,SAAX,CAAd;AACA,kBAAMC,OAAO,MAAMD,MAAME,KAAN,CAAY;AAC3BM,0BAAUL,EADiB;AAE3BM,2BAAW;AAFgB,aAAZ,EAGhBL,MAHgB,EAAnB;AAIA;AACA,gBAAIM,WAAW,EAAf;AACA,gBAAIC,mBAAmB,CAAvB;AACA,iBAAK,MAAMC,IAAX,IAAmBX,IAAnB,EAAyB;AACrB,oBAAIY,gBAAgBD,KAAKE,uBAAzB;AACA,oBAAIC,gBAAgB,MAAM,OAAKf,KAAL,CAAW,qBAAX,EAAkCE,KAAlC,CAAwC;AAC9DC,wBAAIU,aAD0D;AAE9DJ,+BAAW;AAFmD,iBAAxC,EAGvBO,IAHuB,EAA1B;AAIAL,mCAAmBI,cAAcJ,gBAAjC;AACAC,qBAAKK,KAAL,GAAaF,cAAcE,KAA3B;AACH;AACD,gBAAIC,WAAW;AACXR,0BAAUT,IADC;AAEXkB,2BAAWR;AAFA,aAAf;AAIA,mBAAO,OAAKN,OAAL,CAAaa,QAAb,CAAP;AAvBuB;AAwB1B;AACKE,uBAAN,GAA4B;AAAA;;AAAA;AACxB,kBAAMC,eAAe,OAAKd,IAAL,CAAU,cAAV,CAArB;AACA,kBAAMe,eAAe,OAAKf,IAAL,CAAU,cAAV,CAArB;AACA,kBAAMgB,WAAW,OAAKhB,IAAL,CAAU,UAAV,CAAjB;AACA,kBAAMiB,eAAe,OAAKjB,IAAL,CAAU,cAAV,CAArB;AACA,kBAAMkB,OAAO,OAAKlB,IAAL,CAAU,MAAV,CAAb;AACA,kBAAMU,QAAQ,OAAKV,IAAL,CAAU,OAAV,CAAd;AACA,gBAAImB,aAAa;AACbL,8BAAcA,YADD;AAEbC,8BAAcA,YAFD;AAGbG,sBAAMA,IAHO;AAIbD,8BAAcA;AAJD,aAAjB;AAMA,kBAAM,OAAKxB,KAAL,CAAW,MAAX,EAAmBE,KAAnB,CAAyB;AAC3BqB,0BAAUA;AADiB,aAAzB,EAEHI,MAFG,CAEI;AACNH,8BAAcA;AADR,aAFJ,CAAN;AAKA,kBAAMxB,QAAQ,OAAKA,KAAL,CAAW,SAAX,CAAd;AACA,kBAAMA,MAAME,KAAN,CAAY;AACdqB,0BAAUA;AADI,aAAZ,EAEHI,MAFG,CAEID,UAFJ,CAAN;AAGA,gBAAIE,SAAS,MAAM5B,MAAME,KAAN,CAAY;AAC3BqB,0BAAUA;AADiB,aAAZ,EAEhBM,KAFgB,CAEV,kCAFU,EAE0Bb,IAF1B,EAAnB;AAGA,gBAAIc,yBAAyBF,OAAOd,uBAApC;AACA,gBAAIiB,OAAO,MAAM,OAAK/B,KAAL,CAAW,qBAAX,EAAkCE,KAAlC,CAAwC;AACrDC,oBAAI2B;AADiD,aAAxC,EAEdH,MAFc,CAEP;AACNV,uBAAOA;AADD,aAFO,CAAjB;AAKA,gBAAIT,WAAWoB,OAAOpB,QAAtB;AACA;AACA,gBAAIwB,MAAM,MAAM,OAAKhC,KAAL,CAAW,SAAX,EAAsBE,KAAtB,CAA4B;AACxCM,0BAAUA;AAD8B,aAA5B,EAEbJ,MAFa,EAAhB;AAGA,gBAAI4B,IAAIC,MAAJ,GAAa,CAAjB,EAAoB;AAChB,oBAAIC,WAAW,MAAM,OAAKlC,KAAL,CAAW,SAAX,EAAsBE,KAAtB,CAA4B;AAC7CM,8BAAUA;AADmC,iBAA5B,EAElB2B,GAFkB,CAEd,cAFc,CAArB;AAGA,oBAAIC,WAAW,MAAM,OAAKpC,KAAL,CAAW,SAAX,EAAsBE,KAAtB,CAA4B;AAC7CM,8BAAUA;AADmC,iBAA5B,EAElB6B,GAFkB,CAEd,cAFc,CAArB;AAGA,oBAAIC,WAAW,MAAM,OAAKtC,KAAL,CAAW,SAAX,EAAsBE,KAAtB,CAA4B;AAC7CM,8BAAUA;AADmC,iBAA5B,EAElB+B,GAFkB,CAEd,cAFc,CAArB;AAGA,oBAAIC,UAAU,MAAM,OAAKxC,KAAL,CAAW,SAAX,EAAsBE,KAAtB,CAA4B;AAC5CM,8BAAUA;AADkC,iBAA5B,EAEjB6B,GAFiB,CAEb,MAFa,CAApB;AAGA,oBAAII,UAAU,MAAM,OAAKzC,KAAL,CAAW,SAAX,EAAsBE,KAAtB,CAA4B;AAC5CM,8BAAUA;AADkC,iBAA5B,EAEjB+B,GAFiB,CAEb,MAFa,CAApB;AAGA,oBAAIG,aAAaJ,WAAW,GAAX,GAAiBF,QAAlC;AACA,oBAAIO,YAAYF,UAAU,GAAV,GAAgBD,OAAhC;AACA,sBAAM,OAAKxC,KAAL,CAAW,OAAX,EAAoBE,KAApB,CAA0B;AAC5BC,wBAAIK;AADwB,iBAA1B,EAEHmB,MAFG,CAEI;AACNN,kCAAca,QADR;AAENV,kCAAckB,UAFR;AAGNE,gCAAYD,SAHN;AAINE,sCAAkBP,QAJZ;AAKNQ,oCAAgBL;AALV,iBAFJ,CAAN;AASH,aA3BD,MA2BO;AACH,sBAAM,OAAKzC,KAAL,CAAW,OAAX,EAAoBE,KAApB,CAA0B;AAC5BC,wBAAIK;AADwB,iBAA1B,EAEHmB,MAFG,CAEI;AACNN,kCAAcA,YADR;AAENG,kCAAcA,YAFR;AAGNoB,gCAAYnB,IAHN;AAINoB,sCAAkBrB,YAJZ;AAKNsB,oCAAgBrB;AALV,iBAFJ,CAAN;AASH;AACD,mBAAO,OAAKpB,OAAL,CAAa0B,IAAb,CAAP;AA1EwB;AA2E3B;AACKgB,qBAAN,GAA0B;AAAA;;AAAA;AACtB,kBAAMC,YAAY,OAAKzC,IAAL,CAAU,IAAV,CAAlB;AACA,kBAAMP,QAAQ,OAAKA,KAAL,CAAW,SAAX,CAAd;AACA,gBAAI4B,SAAS,MAAM5B,MAAME,KAAN,CAAY;AAC3BC,oBAAI6C;AADuB,aAAZ,EAEhBnB,KAFgB,CAEV,kCAFU,EAE0Bb,IAF1B,EAAnB;AAGA,gBAAIc,yBAAyBF,OAAOd,uBAApC;AACA,gBAAIN,WAAWoB,OAAOpB,QAAtB;AACA,kBAAMR,MAAME,KAAN,CAAY;AACdC,oBAAI6C;AADU,aAAZ,EAEHC,KAFG,CAEG,CAFH,EAEMC,MAFN,EAAN;AAGA,gBAAInB,OAAO,MAAM,OAAK/B,KAAL,CAAW,qBAAX,EAAkCE,KAAlC,CAAwC;AACrDC,oBAAI2B;AADiD,aAAxC,EAEdmB,KAFc,CAER,CAFQ,EAELC,MAFK,EAAjB;AAGA,gBAAIC,WAAW,MAAMnD,MAAME,KAAN,CAAY;AAC7BM,0BAAUA;AADmB,aAAZ,EAElBJ,MAFkB,EAArB;AAGA,gBAAI+C,SAASlB,MAAT,IAAmB,CAAvB,EAA0B;AACtB,oBAAIC,WAAW,MAAM,OAAKlC,KAAL,CAAW,SAAX,EAAsBE,KAAtB,CAA4B;AAC7CM,8BAAUA;AADmC,iBAA5B,EAElB2B,GAFkB,CAEd,cAFc,CAArB;AAGA,oBAAIO,aAAa,MAAM,OAAK1C,KAAL,CAAW,SAAX,EAAsBE,KAAtB,CAA4B;AAC/CM,8BAAUA;AADqC,iBAA5B,EAEpB+B,GAFoB,CAEhB,cAFgB,CAAvB;AAGA,sBAAM,OAAKvC,KAAL,CAAW,OAAX,EAAoBE,KAApB,CAA0B;AAC5BC,wBAAIK;AADwB,iBAA1B,EAEHmB,MAFG,CAEI;AACNN,kCAAca,QADR;AAENV,kCAAckB;AAFR,iBAFJ,CAAN;AAMH;AACD,mBAAO,OAAKrC,OAAL,CAAa0B,IAAb,CAAP;AA/BsB;AAgCzB;AACKqB,yBAAN,GAA8B;AAAA;;AAAA;AAC1B,kBAAM5C,WAAW,OAAKD,IAAL,CAAU,IAAV,CAAjB;AACA,kBAAMP,QAAQ,OAAKA,KAAL,CAAW,SAAX,CAAd;AACA,kBAAMA,MAAME,KAAN,CAAY;AACdM,0BAAUA;AADI,aAAZ,EAEH0C,MAFG,EAAN;AAGA,gBAAInB,OAAO,MAAM,OAAK/B,KAAL,CAAW,qBAAX,EAAkCE,KAAlC,CAAwC;AACrDM,0BAAUA;AAD2C,aAAxC,EAEd0C,MAFc,EAAjB;AAGA,kBAAM,OAAKlD,KAAL,CAAW,OAAX,EAAoBE,KAApB,CAA0B;AAC5BC,oBAAIK;AADwB,aAA1B,EAEHmB,MAFG,CAEI;AACNN,8BAAc,CADR;AAENG,8BAAc;AAFR,aAFJ,CAAN;AAMA,mBAAO,OAAKnB,OAAL,CAAa0B,IAAb,CAAP;AAf0B;AAgB7B;AACKsB,gBAAN,GAAoB;AAAA;;AAAA;AAChB,gBAAIlD,KAAK,OAAKI,IAAL,CAAU,IAAV,CAAT;AACA,gBAAIwB,OAAO,MAAM,OAAK/B,KAAL,CAAW,eAAX,EAA4BE,KAA5B,CAAkC;AAC/CC,oBAAGA;AAD4C,aAAlC,EAEda,IAFc,EAAjB;AAGA,mBAAO,OAAKX,OAAL,CAAa0B,IAAb,CAAP;AALgB;AAMnB;AACKuB,aAAN,GAAkB;AAAA;;AAAA;AACd,kBAAMrC,QAAQ,OAAKV,IAAL,CAAU,MAAV,CAAd;AACA,kBAAMgD,OAAO,OAAKhD,IAAL,CAAU,YAAV,CAAb;AACA,gBAAIwB,OAAO;AACPyB,sBAAMvC,KADC;AAEPwC,4BAAYF;AAFL,aAAX;AAIA,kBAAMvD,QAAQ,OAAKA,KAAL,CAAW,eAAX,CAAd;AACA,kBAAMC,OAAO,MAAMD,MAAM0D,GAAN,CAAU3B,IAAV,CAAnB;AACA,mBAAO,OAAK1B,OAAL,CAAaJ,IAAb,CAAP;AATc;AAUjB;AACK0D,iBAAN,GAAsB;AAAA;;AAAA;AAClB,kBAAMC,KAAK,OAAKrD,IAAL,CAAU,IAAV,CAAX;AACA,kBAAMP,QAAQ,OAAKA,KAAL,CAAW,SAAX,CAAd;AACA,kBAAMC,OAAO,MAAMD,MAAME,KAAN,CAAY;AAC3BqB,0BAAUqC;AADiB,aAAZ,EAEhBxD,MAFgB,EAAnB;AAGA,gBAAIH,KAAKgC,MAAL,GAAc,CAAlB,EAAqB;AACjB,uBAAO,OAAK4B,IAAL,CAAU,OAAV,CAAP;AACH,aAFD,MAEO;AACH,uBAAO,OAAKxD,OAAL,CAAaJ,IAAb,CAAP;AACH;AAViB;AAWrB;AACK6D,gBAAN,GAAqB;AAAA;;AAAA;AACjB,kBAAM3D,KAAK,OAAKI,IAAL,CAAU,IAAV,CAAX;AACA,kBAAMU,QAAQ,OAAKV,IAAL,CAAU,MAAV,CAAd;AACA,kBAAMgD,OAAO,OAAKhD,IAAL,CAAU,YAAV,CAAb;AACA,gBAAIwB,OAAO;AACPyB,sBAAMvC,KADC;AAEPwC,4BAAYF;AAFL,aAAX;AAIA,kBAAMvD,QAAQ,OAAKA,KAAL,CAAW,eAAX,CAAd;AACA,kBAAMC,OAAO,MAAMD,MAAME,KAAN,CAAY;AAC3BC,oBAAIA;AADuB,aAAZ,EAEhBwB,MAFgB,CAETI,IAFS,CAAnB;AAGA,mBAAO,OAAK1B,OAAL,CAAaJ,IAAb,CAAP;AAZiB;AAapB;AACK8D,gBAAN,GAAqB;AAAA;;AAAA;AACjB,kBAAM5D,KAAK,QAAKI,IAAL,CAAU,IAAV,CAAX;AACA,kBAAMyD,aAAa,MAAM,QAAKhE,KAAL,CAAW,qBAAX,EAAkCE,KAAlC,CAAwC;AAC7DS,kCAAkBR,EAD2C;AAE7DM,2BAAW;AAFkD,aAAxC,EAGtBL,MAHsB,EAAzB;AAIA6D,oBAAQC,GAAR,CAAYF,UAAZ;AACA,gBAAIA,WAAW/B,MAAX,GAAoB,CAAxB,EAA2B;AACvB,uBAAO,QAAK4B,IAAL,CAAU,eAAV,CAAP;AACH,aAFD,MAEO;AACH,sBAAM7D,QAAQ,QAAKA,KAAL,CAAW,eAAX,CAAd;AACA,sBAAMC,OAAO,MAAMD,MAAME,KAAN,CAAY;AAC3BC,wBAAIA;AADuB,iBAAZ,EAEhB8C,KAFgB,CAEV,CAFU,EAEPC,MAFO,EAAnB;AAGA,uBAAO,QAAK7C,OAAL,CAAaJ,IAAb,CAAP;AACH;AAfgB;AAgBpB;AA/N+B,CAApC",
    "file": "..\\..\\..\\src\\admin\\controller\\specification.js",
    "sourcesContent": [
        "const Base = require('./base.js');\r\nmodule.exports = class extends Base {\r\n    /**\r\n     * index action\r\n     * @return {Promise} []\r\n     */\r\n    async indexAction() {\r\n        const model = this.model('specification');\r\n        const data = await model.where({\r\n            id: ['>', 0]\r\n        }).select();\r\n        return this.success(data);\r\n    }\r\n    async getGoodsSpecAction() {\r\n        const id = this.post('id');\r\n        const model = this.model('product');\r\n        const data = await model.where({\r\n            goods_id: id,\r\n            is_delete: 0\r\n        }).select();\r\n        //TODO 这里只有一层，以后如果有多重型号，如一件商品既有颜色又有尺寸时，这里的代码是不对的。以后再写。\r\n        let specData = [];\r\n        let specification_id = 0;\r\n        for (const item of data) {\r\n            let goods_spec_id = item.goods_specification_ids;\r\n            let specValueData = await this.model('goods_specification').where({\r\n                id: goods_spec_id,\r\n                is_delete: 0\r\n            }).find();\r\n            specification_id = specValueData.specification_id;\r\n            item.value = specValueData.value;\r\n        }\r\n        let dataInfo = {\r\n            specData: data,\r\n            specValue: specification_id\r\n        };\r\n        return this.success(dataInfo);\r\n    }\r\n    async productUpdateAction() {\r\n        const goods_number = this.post('goods_number');\r\n        const goods_weight = this.post('goods_weight');\r\n        const goods_sn = this.post('goods_sn');\r\n        const retail_price = this.post('retail_price');\r\n        const cost = this.post('cost');\r\n        const value = this.post('value');\r\n        let updateInfo = {\r\n            goods_number: goods_number,\r\n            goods_weight: goods_weight,\r\n            cost: cost,\r\n            retail_price: retail_price\r\n        }\r\n        await this.model('cart').where({\r\n            goods_sn: goods_sn\r\n        }).update({\r\n            retail_price: retail_price\r\n        });\r\n        const model = this.model('product');\r\n        await model.where({\r\n            goods_sn: goods_sn\r\n        }).update(updateInfo);\r\n        let idData = await model.where({\r\n            goods_sn: goods_sn\r\n        }).field('goods_specification_ids,goods_id').find();\r\n        let goods_specification_id = idData.goods_specification_ids\r\n        let info = await this.model('goods_specification').where({\r\n            id: goods_specification_id\r\n        }).update({\r\n            value: value\r\n        });\r\n        let goods_id = idData.goods_id;\r\n        // todo 价格显示为区间\r\n        let pro = await this.model('product').where({\r\n            goods_id: goods_id\r\n        }).select();\r\n        if (pro.length > 1) {\r\n            let goodsNum = await this.model('product').where({\r\n                goods_id: goods_id\r\n            }).sum('goods_number');\r\n            let maxPrice = await this.model('product').where({\r\n                goods_id: goods_id\r\n            }).max('retail_price');\r\n            let minPrice = await this.model('product').where({\r\n                goods_id: goods_id\r\n            }).min('retail_price');\r\n            let maxCost = await this.model('product').where({\r\n                goods_id: goods_id\r\n            }).max('cost');\r\n            let minCost = await this.model('product').where({\r\n                goods_id: goods_id\r\n            }).min('cost');\r\n            let goodsPrice = minPrice + '-' + maxPrice;\r\n            let costPrice = minCost + '-' + maxCost;\r\n            await this.model('goods').where({\r\n                id: goods_id\r\n            }).update({\r\n                goods_number: goodsNum,\r\n                retail_price: goodsPrice,\r\n                cost_price: costPrice,\r\n                min_retail_price: minPrice,\r\n                min_cost_price: minCost,\r\n            });\r\n        } else {\r\n            await this.model('goods').where({\r\n                id: goods_id\r\n            }).update({\r\n                goods_number: goods_number,\r\n                retail_price: retail_price,\r\n                cost_price: cost,\r\n                min_retail_price: retail_price,\r\n                min_cost_price: cost,\r\n            });\r\n        }\r\n        return this.success(info);\r\n    }\r\n    async productDeleAction() {\r\n        const productId = this.post('id');\r\n        const model = this.model('product');\r\n        let idData = await model.where({\r\n            id: productId\r\n        }).field('goods_specification_ids,goods_id').find();\r\n        let goods_specification_id = idData.goods_specification_ids;\r\n        let goods_id = idData.goods_id;\r\n        await model.where({\r\n            id: productId\r\n        }).limit(1).delete();\r\n        let info = await this.model('goods_specification').where({\r\n            id: goods_specification_id\r\n        }).limit(1).delete();\r\n        let lastData = await model.where({\r\n            goods_id: goods_id\r\n        }).select();\r\n        if (lastData.length != 0) {\r\n            let goodsNum = await this.model('product').where({\r\n                goods_id: goods_id\r\n            }).sum('goods_number');\r\n            let goodsPrice = await this.model('product').where({\r\n                goods_id: goods_id\r\n            }).min('retail_price');\r\n            await this.model('goods').where({\r\n                id: goods_id\r\n            }).update({\r\n                goods_number: goodsNum,\r\n                retail_price: goodsPrice\r\n            });\r\n        }\r\n        return this.success(info);\r\n    }\r\n    async delePrimarySpecAction() {\r\n        const goods_id = this.post('id');\r\n        const model = this.model('product');\r\n        await model.where({\r\n            goods_id: goods_id\r\n        }).delete();\r\n        let info = await this.model('goods_specification').where({\r\n            goods_id: goods_id\r\n        }).delete();\r\n        await this.model('goods').where({\r\n            id: goods_id\r\n        }).update({\r\n            goods_number: 0,\r\n            retail_price: 0\r\n        });\r\n        return this.success(info);\r\n    }\r\n    async detailAction(){\r\n        let id = this.post('id');\r\n        let info = await this.model('specification').where({\r\n            id:id\r\n        }).find();\r\n        return this.success(info);\r\n    }\r\n    async addAction() {\r\n        const value = this.post('name');\r\n        const sort = this.post('sort_order');\r\n        let info = {\r\n            name: value,\r\n            sort_order: sort\r\n        }\r\n        const model = this.model('specification');\r\n        const data = await model.add(info);\r\n        return this.success(data);\r\n    }\r\n    async checkSnAction() {\r\n        const sn = this.post('sn');\r\n        const model = this.model('product');\r\n        const data = await model.where({\r\n            goods_sn: sn\r\n        }).select();\r\n        if (data.length > 0) {\r\n            return this.fail('sn已存在');\r\n        } else {\r\n            return this.success(data);\r\n        }\r\n    }\r\n    async updateAction() {\r\n        const id = this.post('id');\r\n        const value = this.post('name');\r\n        const sort = this.post('sort_order');\r\n        let info = {\r\n            name: value,\r\n            sort_order: sort\r\n        }\r\n        const model = this.model('specification');\r\n        const data = await model.where({\r\n            id: id\r\n        }).update(info);\r\n        return this.success(data);\r\n    }\r\n    async deleteAction() {\r\n        const id = this.post('id');\r\n        const goods_spec = await this.model('goods_specification').where({\r\n            specification_id: id,\r\n            is_delete: 0\r\n        }).select();\r\n        console.log(goods_spec);\r\n        if (goods_spec.length > 0) {\r\n            return this.fail('该型号下有商品，暂不能删除')\r\n        } else {\r\n            const model = this.model('specification');\r\n            const data = await model.where({\r\n                id: id\r\n            }).limit(1).delete();\r\n            return this.success(data);\r\n        }\r\n    }\r\n};"
    ]
}