{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\controller\\order.js"
    ],
    "names": [
        "Base",
        "require",
        "moment",
        "_",
        "module",
        "exports",
        "indexAction",
        "page",
        "get",
        "size",
        "orderSn",
        "consignee",
        "logistic_code",
        "status",
        "data",
        "model",
        "where",
        "order_sn",
        "order_status",
        "order_type",
        "order",
        "countSelect",
        "console",
        "log",
        "orderData",
        "find",
        "order_id",
        "id",
        "item",
        "goodsList",
        "field",
        "is_delete",
        "select",
        "goodsCount",
        "forEach",
        "v",
        "number",
        "user",
        "user_id",
        "think",
        "isEmpty",
        "nickname",
        "Buffer",
        "from",
        "toString",
        "userInfo",
        "province_name",
        "province",
        "getField",
        "city_name",
        "city",
        "district_name",
        "district",
        "full_region",
        "postscript",
        "add_time",
        "unix",
        "format",
        "pay_time",
        "order_status_text",
        "getOrderStatusText",
        "express",
        "expressInfo",
        "shipper_name",
        "success",
        "getAutoStatusAction",
        "info",
        "autoDelivery",
        "toDeliveryAction",
        "address",
        "button_text",
        "getOrderBtnText",
        "saveGoodsListAction",
        "post",
        "price",
        "addOrMinus",
        "changePrice",
        "Number",
        "decrement",
        "actual_price",
        "order_price",
        "goods_price",
        "generateOrderNumber",
        "update",
        "increment",
        "goodsListDeleteAction",
        "saveAdminMemoAction",
        "text",
        "admin_memo",
        "savePrintInfoAction",
        "print_info",
        "saveExpressValueInfoAction",
        "express_value",
        "saveRemarkInfoAction",
        "remark",
        "detailAction",
        "product_id",
        "goods_sn",
        "_nickname",
        "user_name",
        "avatar",
        "allAddress",
        "shipping_time",
        "confirm_time",
        "dealdone_time",
        "def",
        "senderInfo",
        "receiveInfo",
        "name",
        "mobile",
        "province_id",
        "city_id",
        "district_id",
        "Name",
        "Tel",
        "ProvinceName",
        "CityName",
        "ExpAreaName",
        "Address",
        "orderInfo",
        "receiver",
        "sender",
        "getAllRegionAction",
        "aData",
        "type",
        "bData",
        "cData",
        "newData",
        "children",
        "bitem",
        "innerChildren",
        "citem",
        "parent_id",
        "push",
        "value",
        "label",
        "orderpackAction",
        "orderReceiveAction",
        "currentTime",
        "parseInt",
        "Date",
        "getTime",
        "orderPriceAction",
        "goodsPrice",
        "freightPrice",
        "actualPrice",
        "freight_price",
        "getOrderExpressAction",
        "orderId",
        "latestExpressInfo",
        "getLatestOrderExpressByAli",
        "getPrintTestAction",
        "printExpress",
        "getMianExpressAction",
        "senderOptions",
        "receiveOptions",
        "receiverInfo",
        "expressType",
        "getMianExpress",
        "ResultCode",
        "orderExpressAdd",
        "rePrintExpressAction",
        "date",
        "getFullYear",
        "padStart",
        "getMonth",
        "getDay",
        "getHours",
        "getMinutes",
        "getSeconds",
        "random",
        "directPrintExpressAction",
        "express_type",
        "code",
        "MonthCode",
        "send_time",
        "ele",
        "Order",
        "ShipperCode",
        "LogisticCode",
        "region_code",
        "DestinatioCode",
        "MarkDestination",
        "kdInfo",
        "kdData",
        "shipper_id",
        "shipper_code",
        "add",
        "goDeliveryAction",
        "updateData",
        "print_status",
        "shipping_status",
        "openId",
        "weixin_openid",
        "goodsInfo",
        "goodsName",
        "length",
        "goods_name",
        "shippingTime",
        "TEMPLATE_ID",
        "config",
        "message",
        "tokenServer",
        "service",
        "token",
        "getAccessToken",
        "res",
        "sendMessage",
        "goPrintOnlyAction",
        "orderDeliveryAction",
        "method",
        "deliveryId",
        "expressName",
        "deliveryMessage",
        "checkExpressAction",
        "fail",
        "saveAddressAction",
        "sn",
        "cAddress",
        "addOptions",
        "storeAction",
        "isPost",
        "values",
        "is_show",
        "is_new",
        "changeStatusAction",
        "destoryAction",
        "limit",
        "delete",
        "getGoodsSpecificationAction",
        "goods_id"
    ],
    "mappings": ";;AAAA,MAAMA,OAAOC,QAAQ,WAAR,CAAb;AACA,MAAMC,SAASD,QAAQ,QAAR,CAAf;AACA,MAAME,IAAIF,QAAQ,QAAR,CAAV;AACA;AACAG,OAAOC,OAAP,GAAiB,cAAcL,IAAd,CAAmB;AAChC;;;;AAIMM,eAAN,GAAoB;AAAA;;AAAA;AAChB,kBAAMC,OAAO,MAAKC,GAAL,CAAS,MAAT,KAAoB,CAAjC;AACA,kBAAMC,OAAO,MAAKD,GAAL,CAAS,MAAT,KAAoB,EAAjC;AACA,kBAAME,UAAU,MAAKF,GAAL,CAAS,SAAT,KAAuB,EAAvC;AACA,kBAAMG,YAAY,MAAKH,GAAL,CAAS,WAAT,KAAyB,EAA3C;AACA,kBAAMI,gBAAgB,MAAKJ,GAAL,CAAS,eAAT,KAA6B,EAAnD;AACA,kBAAMK,SAAS,MAAKL,GAAL,CAAS,QAAT,KAAsB,EAArC;AACA,gBAAIM,OAAO,EAAX;AACA,kBAAMC,QAAQ,MAAKA,KAAL,CAAW,OAAX,CAAd;AACA,gBAAIH,iBAAiB,EAArB,EAAyB;AACrBE,uBAAO,MAAMC,MAAMC,KAAN,CAAY;AACrBC,8BAAU,CAAC,MAAD,EAAU,IAAGP,OAAQ,GAArB,CADW;AAErBC,+BAAW,CAAC,MAAD,EAAU,IAAGA,SAAU,GAAvB,CAFU;AAGrBO,kCAAc,CAAC,IAAD,EAAOL,MAAP,CAHO;AAIrBM,gCAAY,CAAC,GAAD,EAAM,CAAN;AAJS,iBAAZ,EAKVC,KALU,CAKJ,CAAC,SAAD,CALI,EAKSb,IALT,CAKcA,IALd,EAKoBE,IALpB,EAK0BY,WAL1B,EAAb;AAMAC,wBAAQC,GAAR,CAAYT,IAAZ;AACH,aARD,MAQO;AACH,oBAAIU,YAAY,MAAM,MAAKT,KAAL,CAAW,eAAX,EAA4BC,KAA5B,CAAkC;AACpDJ,mCAAeA;AADqC,iBAAlC,EAEnBa,IAFmB,EAAtB;AAGA,oBAAIC,WAAWF,UAAUE,QAAzB;AACAZ,uBAAO,MAAMC,MAAMC,KAAN,CAAY;AACrBW,wBAAID;AADiB,iBAAZ,EAEVN,KAFU,CAEJ,CAAC,SAAD,CAFI,EAESb,IAFT,CAEcA,IAFd,EAEoBE,IAFpB,EAE0BY,WAF1B,EAAb;AAGH;AACD,iBAAK,MAAMO,IAAX,IAAmBd,KAAKA,IAAxB,EAA8B;AAC1Bc,qBAAKC,SAAL,GAAiB,MAAM,MAAKd,KAAL,CAAW,aAAX,EAA0Be,KAA1B,CAAgC,oFAAhC,EAAsHd,KAAtH,CAA4H;AAC/IU,8BAAUE,KAAKD,EADgI;AAE/II,+BAAW;AAFoI,iBAA5H,EAGpBC,MAHoB,EAAvB;AAIAJ,qBAAKK,UAAL,GAAkB,CAAlB;AACAL,qBAAKC,SAAL,CAAeK,OAAf,CAAuB,aAAK;AACxBN,yBAAKK,UAAL,IAAmBE,EAAEC,MAArB;AACH,iBAFD;AAGA,oBAAIC,OAAO,MAAM,MAAKtB,KAAL,CAAW,MAAX,EAAmBC,KAAnB,CAAyB;AACtCW,wBAAIC,KAAKU;AAD6B,iBAAzB,EAEdR,KAFc,CAER,6BAFQ,EAEuBL,IAFvB,EAAjB;AAGA,oBAAI,CAACc,MAAMC,OAAN,CAAcH,IAAd,CAAL,EAA0B;AACtBA,yBAAKI,QAAL,GAAgBC,OAAOC,IAAP,CAAYN,KAAKI,QAAjB,EAA2B,QAA3B,EAAqCG,QAArC,EAAhB;AACH,iBAFD,MAEO;AACHP,yBAAKI,QAAL,GAAgB,KAAhB;AACH;AACDb,qBAAKiB,QAAL,GAAgBR,IAAhB;AACA,oBAAIS,gBAAgB,MAAM,MAAK/B,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B;AACjDW,wBAAIC,KAAKmB;AADwC,iBAA3B,EAEvBC,QAFuB,CAEd,MAFc,EAEN,IAFM,CAA1B;AAGA,oBAAIC,YAAY,MAAM,MAAKlC,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B;AAC7CW,wBAAIC,KAAKsB;AADoC,iBAA3B,EAEnBF,QAFmB,CAEV,MAFU,EAEF,IAFE,CAAtB;AAGA,oBAAIG,gBAAgB,MAAM,MAAKpC,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B;AACjDW,wBAAIC,KAAKwB;AADwC,iBAA3B,EAEvBJ,QAFuB,CAEd,MAFc,EAEN,IAFM,CAA1B;AAGApB,qBAAKyB,WAAL,GAAmBP,gBAAgBG,SAAhB,GAA4BE,aAA/C;AACAvB,qBAAK0B,UAAL,GAAkBZ,OAAOC,IAAP,CAAYf,KAAK0B,UAAjB,EAA6B,QAA7B,EAAuCV,QAAvC,EAAlB;AACAhB,qBAAK2B,QAAL,GAAgBrD,OAAOsD,IAAP,CAAY5B,KAAK2B,QAAjB,EAA2BE,MAA3B,CAAkC,qBAAlC,CAAhB;AACA,oBAAI7B,KAAK8B,QAAL,IAAiB,CAArB,EAAwB;AACpB9B,yBAAK8B,QAAL,GAAgBxD,OAAOsD,IAAP,CAAY5B,KAAK8B,QAAjB,EAA2BD,MAA3B,CAAkC,qBAAlC,CAAhB;AACH,iBAFD,MAEO;AACH7B,yBAAK8B,QAAL,GAAgB,CAAhB;AACH;AACD9B,qBAAK+B,iBAAL,GAAyB,MAAM,MAAK5C,KAAL,CAAW,OAAX,EAAoB6C,kBAApB,CAAuChC,KAAKD,EAA5C,CAA/B;AACA,oBAAIkC,UAAU,MAAM,MAAK9C,KAAL,CAAW,eAAX,EAA4BC,KAA5B,CAAkC;AAClDU,8BAAUE,KAAKD;AADmC,iBAAlC,EAEjBF,IAFiB,EAApB;AAGA,oBAAI,CAACc,MAAMC,OAAN,CAAcqB,OAAd,CAAL,EAA6B;AACzBjC,yBAAKkC,WAAL,GAAmBD,QAAQE,YAAR,GAAuBF,QAAQjD,aAAlD;AACH,iBAFD,MAEO;AACHgB,yBAAKkC,WAAL,GAAmB,EAAnB;AACH;AACD;AACH;AACD,mBAAO,MAAKE,OAAL,CAAalD,IAAb,CAAP;AAxEgB;AAyEnB;AACKmD,uBAAN,GAA4B;AAAA;;AAAA;AACxB,gBAAIpD,SAAS,MAAM,OAAKE,KAAL,CAAW,UAAX,EAAuBC,KAAvB,CAA6B;AAC5CW,oBAAI;AADwC,aAA7B,EAEhBG,KAFgB,CAEV,cAFU,EAEML,IAFN,EAAnB;AAGA,gBAAIyC,OAAOrD,OAAOsD,YAAlB;AACA,mBAAO,OAAKH,OAAL,CAAaE,IAAb,CAAP;AALwB;AAM3B;AACKE,oBAAN,GAAyB;AAAA;;AAAA;AACrB,kBAAM7D,OAAO,OAAKC,GAAL,CAAS,MAAT,KAAoB,CAAjC;AACA,kBAAMC,OAAO,OAAKD,GAAL,CAAS,MAAT,KAAoB,EAAjC;AACA,kBAAMK,SAAS,OAAKL,GAAL,CAAS,QAAT,KAAsB,EAArC;AACA,kBAAMO,QAAQ,OAAKA,KAAL,CAAW,OAAX,CAAd;AACA,kBAAMD,OAAO,MAAMC,MAAMC,KAAN,CAAY;AAC3BE,8BAAcL;AADa,aAAZ,EAEhBO,KAFgB,CAEV,CAAC,SAAD,CAFU,EAEGb,IAFH,CAEQA,IAFR,EAEcE,IAFd,EAEoBY,WAFpB,EAAnB;AAGA,iBAAK,MAAMO,IAAX,IAAmBd,KAAKA,IAAxB,EAA8B;AAC1Bc,qBAAKC,SAAL,GAAiB,MAAM,OAAKd,KAAL,CAAW,aAAX,EAA0Be,KAA1B,CAAgC,0EAAhC,EAA4Gd,KAA5G,CAAkH;AACrIU,8BAAUE,KAAKD;AADsH,iBAAlH,EAEpBK,MAFoB,EAAvB;AAGAJ,qBAAKK,UAAL,GAAkB,CAAlB;AACAL,qBAAKC,SAAL,CAAeK,OAAf,CAAuB,aAAK;AACxBN,yBAAKK,UAAL,IAAmBE,EAAEC,MAArB;AACH,iBAFD;AAGA,oBAAIU,gBAAgB,MAAM,OAAK/B,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B;AACjDW,wBAAIC,KAAKmB;AADwC,iBAA3B,EAEvBC,QAFuB,CAEd,MAFc,EAEN,IAFM,CAA1B;AAGA,oBAAIC,YAAY,MAAM,OAAKlC,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B;AAC7CW,wBAAIC,KAAKsB;AADoC,iBAA3B,EAEnBF,QAFmB,CAEV,MAFU,EAEF,IAFE,CAAtB;AAGA,oBAAIG,gBAAgB,MAAM,OAAKpC,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B;AACjDW,wBAAIC,KAAKwB;AADwC,iBAA3B,EAEvBJ,QAFuB,CAEd,MAFc,EAEN,IAFM,CAA1B;AAGApB,qBAAKyC,OAAL,GAAevB,gBAAgBG,SAAhB,GAA4BE,aAA5B,GAA4CvB,KAAKyC,OAAhE;AACAzC,qBAAK0B,UAAL,GAAkBZ,OAAOC,IAAP,CAAYf,KAAK0B,UAAjB,EAA6B,QAA7B,EAAuCV,QAAvC,EAAlB;AACAhB,qBAAK2B,QAAL,GAAgBrD,OAAOsD,IAAP,CAAY5B,KAAK2B,QAAjB,EAA2BE,MAA3B,CAAkC,qBAAlC,CAAhB;AACA7B,qBAAK+B,iBAAL,GAAyB,MAAM,OAAK5C,KAAL,CAAW,OAAX,EAAoB6C,kBAApB,CAAuChC,KAAKD,EAA5C,CAA/B;AACAC,qBAAK0C,WAAL,GAAmB,MAAM,OAAKvD,KAAL,CAAW,OAAX,EAAoBwD,eAApB,CAAoC3C,KAAKD,EAAzC,CAAzB;AACH;AACD,mBAAO,OAAKqC,OAAL,CAAalD,IAAb,CAAP;AA/BqB;AAgCxB;AACK0D,uBAAN,GAA4B;AAAA;;AAAA;AACxB;AACA,gBAAI7C,KAAK,OAAK8C,IAAL,CAAU,IAAV,CAAT;AACA,gBAAI/C,WAAW,OAAK+C,IAAL,CAAU,UAAV,CAAf;AACA,gBAAIrC,SAAS,OAAKqC,IAAL,CAAU,QAAV,CAAb;AACA,gBAAIC,QAAQ,OAAKD,IAAL,CAAU,cAAV,CAAZ;AACA,gBAAIE,aAAa,OAAKF,IAAL,CAAU,YAAV,CAAjB;AACA,gBAAIG,cAAcC,OAAOzC,MAAP,IAAiByC,OAAOH,KAAP,CAAnC;AACApD,oBAAQC,GAAR,CAAYG,QAAZ;AACAJ,oBAAQC,GAAR,CAAYqD,WAAZ;AACA,gBAAID,cAAc,CAAlB,EAAqB;AACjB,sBAAM,OAAK5D,KAAL,CAAW,aAAX,EAA0BC,KAA1B,CAAgC;AAClCW,wBAAIA;AAD8B,iBAAhC,EAEHmD,SAFG,CAEO,QAFP,EAEiB1C,MAFjB,CAAN;AAGA,sBAAM,OAAKrB,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AAC5BW,wBAAID;AADwB,iBAA1B,EAEHoD,SAFG,CAEO;AACTC,kCAAcH,WADL;AAETI,iCAAaJ,WAFJ;AAGTK,iCAAaL;AAHJ,iBAFP,CAAN;AAOA,oBAAI3D,WAAW,OAAKF,KAAL,CAAW,OAAX,EAAoBmE,mBAApB,EAAf;AACA,sBAAM,OAAKnE,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AAC5BW,wBAAID;AADwB,iBAA1B,EAEHyD,MAFG,CAEI;AACNlE,8BAAUA;AADJ,iBAFJ,CAAN;AAKA,uBAAO,OAAK+C,OAAL,CAAa/C,QAAb,CAAP;AACH,aAlBD,MAkBO,IAAI0D,cAAc,CAAlB,EAAqB;AACxB,sBAAM,OAAK5D,KAAL,CAAW,aAAX,EAA0BC,KAA1B,CAAgC;AAClCW,wBAAIA;AAD8B,iBAAhC,EAEHyD,SAFG,CAEO,QAFP,EAEiBhD,MAFjB,CAAN;AAGA,sBAAM,OAAKrB,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AAC5BW,wBAAID;AADwB,iBAA1B,EAEH0D,SAFG,CAEO;AACTL,kCAAcH,WADL;AAETI,iCAAaJ,WAFJ;AAGTK,iCAAaL;AAHJ,iBAFP,CAAN;AAOA,oBAAI3D,WAAW,OAAKF,KAAL,CAAW,OAAX,EAAoBmE,mBAApB,EAAf;AACA,sBAAM,OAAKnE,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AAC5BW,wBAAID;AADwB,iBAA1B,EAEHyD,MAFG,CAEI;AACNlE,8BAAUA;AADJ,iBAFJ,CAAN;AAKA,uBAAO,OAAK+C,OAAL,CAAa/C,QAAb,CAAP;AACH;AA9CuB;AA+C3B;AACKoE,yBAAN,GAA8B;AAAA;;AAAA;AAC1B/D,oBAAQC,GAAR,CAAY,OAAKkD,IAAL,CAAU,IAAV,CAAZ;AACA,gBAAI9C,KAAK,OAAK8C,IAAL,CAAU,IAAV,CAAT;AACA,gBAAI/C,WAAW,OAAK+C,IAAL,CAAU,UAAV,CAAf;AACA,gBAAIrC,SAAS,OAAKqC,IAAL,CAAU,QAAV,CAAb;AACA,gBAAIC,QAAQ,OAAKD,IAAL,CAAU,cAAV,CAAZ;AACA,gBAAIE,aAAa,OAAKF,IAAL,CAAU,YAAV,CAAjB;AACA,gBAAIG,cAAcC,OAAOzC,MAAP,IAAiByC,OAAOH,KAAP,CAAnC;AACApD,oBAAQC,GAAR,CAAYG,QAAZ;AACAJ,oBAAQC,GAAR,CAAYqD,WAAZ;AACA,kBAAM,OAAK7D,KAAL,CAAW,aAAX,EAA0BC,KAA1B,CAAgC;AAClCW,oBAAIA;AAD8B,aAAhC,EAEHwD,MAFG,CAEI;AACNpD,2BAAW;AADL,aAFJ,CAAN;AAKA,kBAAM,OAAKhB,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AAC5BW,oBAAID;AADwB,aAA1B,EAEHoD,SAFG,CAEO;AACTC,8BAAcH,WADL;AAETI,6BAAaJ,WAFJ;AAGTK,6BAAaL;AAHJ,aAFP,CAAN;AAOA,gBAAI3D,WAAW,OAAKF,KAAL,CAAW,OAAX,EAAoBmE,mBAApB,EAAf;AACA,kBAAM,OAAKnE,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AAC5BW,oBAAID;AADwB,aAA1B,EAEHyD,MAFG,CAEI;AACNlE,0BAAUA;AADJ,aAFJ,CAAN;AAKA,mBAAO,OAAK+C,OAAL,CAAa/C,QAAb,CAAP;AA5B0B;AA6B7B;AACKqE,uBAAN,GAA4B;AAAA;;AAAA;AACxB,kBAAM3D,KAAK,OAAK8C,IAAL,CAAU,IAAV,CAAX;AACA,kBAAMc,OAAO,OAAKd,IAAL,CAAU,MAAV,CAAb;AACA,kBAAM1D,QAAQ,OAAKA,KAAL,CAAW,OAAX,CAAd;AACA,gBAAImD,OAAO;AACPsB,4BAAYD;AADL,aAAX;AAGA,gBAAIzE,OAAO,MAAMC,MAAMC,KAAN,CAAY;AACzBW,oBAAIA;AADqB,aAAZ,EAEdwD,MAFc,CAEPjB,IAFO,CAAjB;AAGA,mBAAO,OAAKF,OAAL,CAAalD,IAAb,CAAP;AAVwB;AAW3B;AACK2E,uBAAN,GAA4B;AAAA;;AAAA;AACxB,kBAAM9D,KAAK,OAAK8C,IAAL,CAAU,IAAV,CAAX;AACA,kBAAMiB,aAAa,OAAKjB,IAAL,CAAU,YAAV,CAAnB;AACA,kBAAM1D,QAAQ,OAAKA,KAAL,CAAW,OAAX,CAAd;AACA,gBAAImD,OAAO;AACPwB,4BAAYA;AADL,aAAX;AAGA,gBAAI5E,OAAO,MAAMC,MAAMC,KAAN,CAAY;AACzBW,oBAAIA;AADqB,aAAZ,EAEdwD,MAFc,CAEPjB,IAFO,CAAjB;AAGA,mBAAO,OAAKF,OAAL,CAAalD,IAAb,CAAP;AAVwB;AAW3B;AACK6E,8BAAN,GAAmC;AAAA;;AAAA;AAC/B,kBAAMhE,KAAK,OAAK8C,IAAL,CAAU,IAAV,CAAX;AACA,kBAAMmB,gBAAgB,OAAKnB,IAAL,CAAU,eAAV,CAAtB;AACA,kBAAM1D,QAAQ,OAAKA,KAAL,CAAW,OAAX,CAAd;AACA,gBAAImD,OAAO;AACP0B,+BAAeA;AADR,aAAX;AAGA,gBAAI9E,OAAO,MAAMC,MAAMC,KAAN,CAAY;AACzBW,oBAAIA;AADqB,aAAZ,EAEdwD,MAFc,CAEPjB,IAFO,CAAjB;AAGA,mBAAO,OAAKF,OAAL,CAAalD,IAAb,CAAP;AAV+B;AAWlC;AACK+E,wBAAN,GAA6B;AAAA;;AAAA;AACzB,kBAAMlE,KAAK,OAAK8C,IAAL,CAAU,IAAV,CAAX;AACA,kBAAMqB,SAAS,OAAKrB,IAAL,CAAU,QAAV,CAAf;AACA,kBAAM1D,QAAQ,OAAKA,KAAL,CAAW,OAAX,CAAd;AACA,gBAAImD,OAAO;AACP4B,wBAAQA;AADD,aAAX;AAGA,gBAAIhF,OAAO,MAAMC,MAAMC,KAAN,CAAY;AACzBW,oBAAIA;AADqB,aAAZ,EAEdwD,MAFc,CAEPjB,IAFO,CAAjB;AAGA,mBAAO,OAAKF,OAAL,CAAalD,IAAb,CAAP;AAVyB;AAW5B;AACKiF,gBAAN,GAAqB;AAAA;;AAAA;AACjB,kBAAMpE,KAAK,QAAKnB,GAAL,CAAS,SAAT,CAAX;AACA,kBAAMO,QAAQ,QAAKA,KAAL,CAAW,OAAX,CAAd;AACA,gBAAID,OAAO,MAAMC,MAAMC,KAAN,CAAY;AACzBW,oBAAIA;AADqB,aAAZ,EAEdF,IAFc,EAAjB;AAGAX,iBAAKe,SAAL,GAAiB,MAAM,QAAKd,KAAL,CAAW,aAAX,EAA0Be,KAA1B,CAAgC,2GAAhC,EAA6Id,KAA7I,CAAmJ;AACtKU,0BAAUZ,KAAKa,EADuJ;AAEtKI,2BAAW;AAF2J,aAAnJ,EAGpBC,MAHoB,EAAvB;AAIAlB,iBAAKmB,UAAL,GAAkB,CAAlB;AACAnB,iBAAKe,SAAL,CAAeK,OAAf,CAAuB,aAAK;AACxBpB,qBAAKmB,UAAL,IAAmBE,EAAEC,MAArB;AACH,aAFD;AAGA,iBAAK,MAAMR,IAAX,IAAmBd,KAAKe,SAAxB,EAAmC;AAC/B,oBAAIqC,OAAO,MAAM,QAAKnD,KAAL,CAAW,SAAX,EAAsBC,KAAtB,CAA4B;AACzCW,wBAAIC,KAAKoE;AADgC,iBAA5B,EAEdlE,KAFc,CAER,UAFQ,EAEIL,IAFJ,EAAjB;AAGAG,qBAAKqE,QAAL,GAAgB/B,KAAK+B,QAArB;AACH;AACD3E,oBAAQC,GAAR,CAAYT,KAAKe,SAAjB;AACA,gBAAIgB,WAAW,MAAM,QAAK9B,KAAL,CAAW,MAAX,EAAmBC,KAAnB,CAAyB;AAC1CW,oBAAIb,KAAKwB;AADiC,aAAzB,EAElBb,IAFkB,EAArB;AAGA,gBAAIyE,YAAYxD,OAAOC,IAAP,CAAYE,SAASJ,QAArB,EAA+B,QAA/B,EAAyCG,QAAzC,EAAhB;AACA9B,iBAAKqF,SAAL,GAAiBD,SAAjB;AACApF,iBAAKsF,MAAL,GAAcvD,SAASuD,MAAvB;AACA,gBAAItD,gBAAgB,MAAM,QAAK/B,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B;AACjDW,oBAAIb,KAAKiC;AADwC,aAA3B,EAEvBC,QAFuB,CAEd,MAFc,EAEN,IAFM,CAA1B;AAGA,gBAAIC,YAAY,MAAM,QAAKlC,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B;AAC7CW,oBAAIb,KAAKoC;AADoC,aAA3B,EAEnBF,QAFmB,CAEV,MAFU,EAEF,IAFE,CAAtB;AAGA,gBAAIG,gBAAgB,MAAM,QAAKpC,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B;AACjDW,oBAAIb,KAAKsC;AADwC,aAA3B,EAEvBJ,QAFuB,CAEd,MAFc,EAEN,IAFM,CAA1B;AAGAlC,iBAAKuC,WAAL,GAAmBP,gBAAgBG,SAAhB,GAA4BE,aAA/C;AACArC,iBAAKwC,UAAL,GAAkBZ,OAAOC,IAAP,CAAY7B,KAAKwC,UAAjB,EAA6B,QAA7B,EAAuCV,QAAvC,EAAlB;AACA9B,iBAAK6C,iBAAL,GAAyB,MAAM,QAAK5C,KAAL,CAAW,OAAX,EAAoB6C,kBAApB,CAAuC9C,KAAKa,EAA5C,CAA/B;AACAb,iBAAKyC,QAAL,GAAgBrD,OAAOsD,IAAP,CAAY1C,KAAKyC,QAAjB,EAA2BE,MAA3B,CAAkC,qBAAlC,CAAhB;AACA3C,iBAAKuF,UAAL,GAAkBvF,KAAKuC,WAAL,GAAmBvC,KAAKuD,OAA1C;AACA,gBAAIvD,KAAK4C,QAAL,IAAiB,CAArB,EAAwB;AACpB5C,qBAAK4C,QAAL,GAAgBxD,OAAOsD,IAAP,CAAY1C,KAAK4C,QAAjB,EAA2BD,MAA3B,CAAkC,qBAAlC,CAAhB;AACH;AACD,gBAAI3C,KAAKwF,aAAL,IAAsB,CAA1B,EAA6B;AACzBxF,qBAAKwF,aAAL,GAAqBpG,OAAOsD,IAAP,CAAY1C,KAAKwF,aAAjB,EAAgC7C,MAAhC,CAAuC,qBAAvC,CAArB;AACH;AACD,gBAAI3C,KAAKyF,YAAL,IAAqB,CAAzB,EAA4B;AACxBzF,qBAAKyF,YAAL,GAAoBrG,OAAOsD,IAAP,CAAY1C,KAAKyF,YAAjB,EAA+B9C,MAA/B,CAAsC,qBAAtC,CAApB;AACH;AACD,gBAAI3C,KAAK0F,aAAL,IAAsB,CAA1B,EAA6B;AACzB1F,qBAAK0F,aAAL,GAAqBtG,OAAOsD,IAAP,CAAY1C,KAAK0F,aAAjB,EAAgC/C,MAAhC,CAAuC,qBAAvC,CAArB;AACH;AACD,gBAAIgD,MAAM,MAAM,QAAK1F,KAAL,CAAW,UAAX,EAAuBC,KAAvB,CAA6B;AACzCW,oBAAI;AADqC,aAA7B,EAEbF,IAFa,EAAhB;AAGA,gBAAIiF,aAAa,EAAjB;AACA,gBAAIC,cAAc,EAAlB;AACAA,0BAAc;AACVC,sBAAM9F,KAAKH,SADD;AAEVkG,wBAAQ/F,KAAK+F,MAFH;AAGV9D,0BAAUD,aAHA;AAIVgE,6BAAahG,KAAKiC,QAJR;AAKVG,sBAAMD,SALI;AAMV8D,yBAASjG,KAAKoC,IANJ;AAOVE,0BAAUD,aAPA;AAQV6D,6BAAalG,KAAKsC,QARR;AASViB,yBAASvD,KAAKuD;AATJ,aAAd;AAWAqC,yBAAa;AACTE,sBAAMH,IAAIQ,IADD;AAETJ,wBAAQJ,IAAIS,GAFH;AAGTnE,0BAAU0D,IAAIU,YAHL;AAITjE,sBAAMuD,IAAIW,QAJD;AAKThE,0BAAUqD,IAAIY,WALL;AAMTP,6BAAaL,IAAIK,WANR;AAOTC,yBAASN,IAAIM,OAPJ;AAQTC,6BAAaP,IAAIO,WARR;AAST3C,yBAASoC,IAAIa;AATJ,aAAb;AAWA,mBAAO,QAAKtD,OAAL,CAAa;AAChBuD,2BAAWzG,IADK;AAEhB0G,0BAAUb,WAFM;AAGhBc,wBAAQf;AAHQ,aAAb,CAAP;AAhFiB;AAqFpB;AACKgB,sBAAN,GAA2B;AAAA;;AAAA;AAAE;AACzB,kBAAM3G,QAAQ,QAAKA,KAAL,CAAW,QAAX,CAAd;AACA,kBAAM4G,QAAQ,MAAM5G,MAAMC,KAAN,CAAY;AAC5B4G,sBAAM;AADsB,aAAZ,EAEjB5F,MAFiB,EAApB;AAGA,kBAAM6F,QAAQ,MAAM9G,MAAMC,KAAN,CAAY;AAC5B4G,sBAAM;AADsB,aAAZ,EAEjB5F,MAFiB,EAApB;AAGA,kBAAM8F,QAAQ,MAAM/G,MAAMC,KAAN,CAAY;AAC5B4G,sBAAM;AADsB,aAAZ,EAEjB5F,MAFiB,EAApB;AAGA,gBAAI+F,UAAU,EAAd;AACA,iBAAK,MAAMnG,IAAX,IAAmB+F,KAAnB,EAA0B;AACtB,oBAAIK,WAAW,EAAf;AACA,qBAAK,MAAMC,KAAX,IAAoBJ,KAApB,EAA2B;AACvB,wBAAIK,gBAAgB,EAApB;AACA,yBAAK,MAAMC,KAAX,IAAoBL,KAApB,EAA2B;AACvB,4BAAIK,MAAMC,SAAN,IAAmBH,MAAMtG,EAA7B,EAAiC;AAC7BuG,0CAAcG,IAAd,CAAmB;AACfC,uCAAOH,MAAMxG,EADE;AAEf4G,uCAAOJ,MAAMvB;AAFE,6BAAnB;AAIH;AACJ;AACD,wBAAIqB,MAAMG,SAAN,IAAmBxG,KAAKD,EAA5B,EAAgC;AAC5BqG,iCAASK,IAAT,CAAc;AACVC,mCAAOL,MAAMtG,EADH;AAEV4G,mCAAON,MAAMrB,IAFH;AAGVoB,sCAAUE;AAHA,yBAAd;AAKH;AACJ;AACDH,wBAAQM,IAAR,CAAa;AACTC,2BAAO1G,KAAKD,EADH;AAET4G,2BAAO3G,KAAKgF,IAFH;AAGToB,8BAAUA;AAHD,iBAAb;AAKH;AACD,mBAAO,QAAKhE,OAAL,CAAa+D,OAAb,CAAP;AAtCuB;AAuC1B;AACKS,mBAAN,GAAwB;AAAA;;AAAA;AACpB,kBAAM7G,KAAK,QAAKnB,GAAL,CAAS,SAAT,CAAX;AACA,kBAAMO,QAAQ,QAAKA,KAAL,CAAW,OAAX,CAAd;AACA,kBAAMD,OAAO,MAAMC,MAAMC,KAAN,CAAY;AAC3BW,oBAAIA;AADuB,aAAZ,EAEhBwD,MAFgB,CAET;AACNjE,8BAAc;AADR,aAFS,CAAnB;AAHoB;AAQvB;AACKuH,sBAAN,GAA2B;AAAA;;AAAA;AACvB,kBAAM9G,KAAK,QAAKnB,GAAL,CAAS,SAAT,CAAX;AACA,gBAAIkI,cAAcC,SAAS,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAhC,CAAlB;AACA,kBAAM9H,QAAQ,QAAKA,KAAL,CAAW,OAAX,CAAd;AACA,kBAAMD,OAAO,MAAMC,MAAMC,KAAN,CAAY;AAC3BW,oBAAIA;AADuB,aAAZ,EAEhBwD,MAFgB,CAET;AACNjE,8BAAc,GADR;AAENoF,+BAAeoC;AAFT,aAFS,CAAnB;AAJuB;AAU1B;AACKI,oBAAN,GAAyB;AAAA;;AAAA;AACrB,kBAAMnH,KAAK,QAAKnB,GAAL,CAAS,SAAT,CAAX;AACA,kBAAMuI,aAAa,QAAKvI,GAAL,CAAS,YAAT,CAAnB;AACA,kBAAMwI,eAAe,QAAKxI,GAAL,CAAS,cAAT,CAArB;AACA,kBAAMyI,cAAc,QAAKzI,GAAL,CAAS,aAAT,CAApB;AACA,kBAAMO,QAAQ,QAAKA,KAAL,CAAW,OAAX,CAAd;AACA,kBAAMD,OAAO,MAAMC,MAAMC,KAAN,CAAY;AAC3BW,oBAAIA;AADuB,aAAZ,EAEhBF,IAFgB,EAAnB;AAGA,gBAAIsG,UAAU;AACVhD,8BAAckE,WADJ;AAEVC,+BAAeF,YAFL;AAGV/D,6BAAa8D,UAHH;AAIV9H,0BAAUF,MAAMmE,mBAAN;AAJA,aAAd;AAMA,kBAAMnE,MAAMC,KAAN,CAAY;AACdW,oBAAIA;AADU,aAAZ,EAEHwD,MAFG,CAEI4C,OAFJ,CAAN;AAfqB;AAkBxB;AACKoB,yBAAN,GAA8B;AAAA;;AAAA;AAC1B,kBAAMC,UAAU,QAAK3E,IAAL,CAAU,SAAV,CAAhB;AACA,kBAAM4E,oBAAoB,MAAM,QAAKtI,KAAL,CAAW,eAAX,EAA4BuI,0BAA5B,CAAuDF,OAAvD,CAAhC;AACA,mBAAO,QAAKpF,OAAL,CAAaqF,iBAAb,CAAP;AAH0B;AAI7B;AACKE,sBAAN,GAA2B;AAAA;;AAAA;AACvB,kBAAMF,oBAAoB,MAAM,QAAKtI,KAAL,CAAW,eAAX,EAA4ByI,YAA5B,EAAhC;AACA,mBAAO,QAAKxF,OAAL,CAAaqF,iBAAb,CAAP;AAFuB;AAG1B;AACKI,wBAAN,GAA6B;AAAA;;AAAA;AACzB,kBAAML,UAAU,QAAK3E,IAAL,CAAU,SAAV,CAAhB;AACA,kBAAMgD,SAAS,QAAKhD,IAAL,CAAU,QAAV,CAAf;AACA,kBAAM+C,WAAW,QAAK/C,IAAL,CAAU,UAAV,CAAjB;AACAnD,oBAAQC,GAAR,CAAY6H,OAAZ;AACA9H,oBAAQC,GAAR,CAAYkG,MAAZ;AACAnG,oBAAQC,GAAR,CAAYiG,QAAZ;AACA,gBAAIkC,gBAAgBjC,OAAOiC,aAA3B;AACA,gBAAIC,iBAAiBnC,SAASmC,cAA9B;AACA,gBAAIjD,aAAa;AACbO,sBAAMQ,OAAOb,IADA;AAEbM,qBAAKO,OAAOZ,MAFC;AAGbM,8BAAc,MAAM,QAAKpG,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B;AAC3CW,wBAAI+H,cAAc,CAAd;AADuC,iBAA3B,EAEjB1G,QAFiB,CAER,MAFQ,EAEA,IAFA,CAHP;AAMboE,0BAAU,MAAM,QAAKrG,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B;AACvCW,wBAAI+H,cAAc,CAAd;AADmC,iBAA3B,EAEb1G,QAFa,CAEJ,MAFI,EAEI,IAFJ,CANH;AASbqE,6BAAa,MAAM,QAAKtG,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B;AAC1CW,wBAAI+H,cAAc,CAAd;AADsC,iBAA3B,EAEhB1G,QAFgB,CAEP,MAFO,EAEC,IAFD,CATN;AAYbsE,yBAASG,OAAOpD;AAZH,aAAjB;AAcA,gBAAIuF,eAAe;AACf3C,sBAAMO,SAASZ,IADA;AAEfM,qBAAKM,SAASX,MAFC;AAGfM,8BAAc,MAAM,QAAKpG,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B;AAC3CW,wBAAIgI,eAAe,CAAf;AADuC,iBAA3B,EAEjB3G,QAFiB,CAER,MAFQ,EAEA,IAFA,CAHL;AAMfoE,0BAAU,MAAM,QAAKrG,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B;AACvCW,wBAAIgI,eAAe,CAAf;AADmC,iBAA3B,EAEb3G,QAFa,CAEJ,MAFI,EAEI,IAFJ,CAND;AASfqE,6BAAa,MAAM,QAAKtG,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B;AAC1CW,wBAAIgI,eAAe,CAAf;AADsC,iBAA3B,EAEhB3G,QAFgB,CAEP,MAFO,EAEC,IAFD,CATJ;AAYfsE,yBAASE,SAASnD;AAZH,aAAnB;AAcA;AACA,kBAAMwF,cAAc,QAAKpF,IAAL,CAAU,aAAV,CAApB;AACA,kBAAM4E,oBAAoB,MAAM,QAAKtI,KAAL,CAAW,eAAX,EAA4B+I,cAA5B,CAA2CV,OAA3C,EAAoD1C,UAApD,EAAgEkD,YAAhE,EAA8EC,WAA9E,CAAhC;AACAvI,oBAAQC,GAAR,CAAY,uCAAZ;AACAD,oBAAQC,GAAR,CAAY8H,iBAAZ;AACA,gBAAIA,kBAAkBU,UAAlB,IAAgC,GAApC,EAAyC;AACrC;AACA,wBAAKC,eAAL,CAAqBX,iBAArB,EAAwCD,OAAxC;AACH;AACD,mBAAO,QAAKpF,OAAL,CAAa;AAChBqF,mCAAmBA,iBADH;AAEhB5B,wBAAQf,UAFQ;AAGhBc,0BAAUoC;AAHM,aAAb,CAAP;AA9CyB;AAmD5B;AACKK,wBAAN,GAA6B;AAAA;;AAAA;AACzB,kBAAMC,OAAO,IAAItB,IAAJ,EAAb;AACA,gBAAIQ,UAAU,QAAK5I,GAAL,CAAS,SAAT,CAAd;AACA,gBAAIS,WAAWiJ,KAAKC,WAAL,KAAqBhK,EAAEiK,QAAF,CAAWF,KAAKG,QAAL,EAAX,EAA4B,CAA5B,EAA+B,GAA/B,CAArB,GAA2DlK,EAAEiK,QAAF,CAAWF,KAAKI,MAAL,EAAX,EAA0B,CAA1B,EAA6B,GAA7B,CAA3D,GAA+FnK,EAAEiK,QAAF,CAAWF,KAAKK,QAAL,EAAX,EAA4B,CAA5B,EAA+B,GAA/B,CAA/F,GAAqIpK,EAAEiK,QAAF,CAAWF,KAAKM,UAAL,EAAX,EAA8B,CAA9B,EAAiC,GAAjC,CAArI,GAA6KrK,EAAEiK,QAAF,CAAWF,KAAKO,UAAL,EAAX,EAA8B,CAA9B,EAAiC,GAAjC,CAA7K,GAAqNtK,EAAEuK,MAAF,CAAS,MAAT,EAAiB,MAAjB,CAApO;AACA,gBAAIxG,OAAO,MAAM,QAAKnD,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AACvCW,oBAAIyH;AADmC,aAA1B,EAEdjE,MAFc,CAEP;AACNlE,0BAAUA;AADJ,aAFO,CAAjB;AAKA,mBAAO,QAAK+C,OAAL,CAAaE,IAAb,CAAP;AATyB;AAU5B;AACKyG,4BAAN,GAAiC;AAAA;;AAAA;AAC7B,gBAAIvB,UAAU,QAAK5I,GAAL,CAAS,SAAT,CAAd;AACA,gBAAIqD,UAAU,MAAM,QAAK9C,KAAL,CAAW,eAAX,EAA4BC,KAA5B,CAAkC;AAClDU,0BAAU0H;AADwC,aAAlC,EAEjB3H,IAFiB,EAApB;AAGA,gBAAIyC,OAAO,EAAX;AACA,gBAAIL,QAAQ+G,YAAR,GAAuB,CAA3B,EAA8B;AAC1B1G,uBAAO,MAAM,QAAKnD,KAAL,CAAW,SAAX,EAAsBC,KAAtB,CAA4B;AACrC6J,0BAAM;AAD+B,iBAA5B,EAEVpJ,IAFU,EAAb;AAGH,aAJD,MAIO;AACHyC,uBAAO,MAAM,QAAKnD,KAAL,CAAW,SAAX,EAAsBC,KAAtB,CAA4B;AACrC6J,0BAAM;AAD+B,iBAA5B,EAEVpJ,IAFU,EAAb;AAGH;AACDoC,oBAAQiH,SAAR,GAAoB5G,KAAK4G,SAAzB;AACAjH,oBAAQkH,SAAR,GAAoB7K,OAAOsD,IAAP,CAAYK,QAAQN,QAApB,EAA8BE,MAA9B,CAAqC,YAArC,CAApB;AACA,mBAAO,QAAKO,OAAL,CAAaH,OAAb,CAAP;AAjB6B;AAkBhC;AACKmG,mBAAN,CAAsBgB,GAAtB,EAA2B5B,OAA3B,EAAoC;AAAA;;AAAA;AAChC,gBAAIV,cAAcC,SAAS,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAhC,CAAlB;AACA,gBAAI3E,OAAO,MAAM,QAAKnD,KAAL,CAAW,eAAX,EAA4BC,KAA5B,CAAkC;AAC/CU,0BAAU0H;AADqC,aAAlC,EAEd3H,IAFc,EAAjB;AAGA,gBAAIc,MAAMC,OAAN,CAAc0B,IAAd,CAAJ,EAAyB;AACrB,oBAAIqD,YAAYyD,IAAIC,KAApB;AACA,oBAAIC,cAAc3D,UAAU2D,WAA5B;AACA,oBAAItK,gBAAgB2G,UAAU4D,YAA9B;AACA,oBAAItB,cAAcmB,IAAInB,WAAtB;AACA,oBAAIuB,cAAc7D,UAAU8D,cAA5B;AACA,oBAAIxB,eAAe,CAAnB,EAAsB;AAClBuB,kCAAc7D,UAAU+D,eAAxB;AACH;AACD,sBAAMvK,QAAQ,QAAKA,KAAL,CAAW,OAAX,CAAd;AACA,oBAAIwK,SAAS,MAAM,QAAKxK,KAAL,CAAW,SAAX,EAAsBC,KAAtB,CAA4B;AAC3C6J,0BAAMK;AADqC,iBAA5B,EAEhBzJ,IAFgB,EAAnB;AAGA,oBAAI+J,SAAS;AACT9J,8BAAU0H,OADD;AAETqC,gCAAYF,OAAO5J,EAFV;AAGToC,kCAAcwH,OAAO3E,IAHZ;AAIT8E,kCAAcR,WAJL;AAKTtK,mCAAeA,aALN;AAMTwK,iCAAaA,WANJ;AAOTR,kCAAcf,WAPL;AAQTtG,8BAAUmF;AARD,iBAAb;AAUA,sBAAM,QAAK3H,KAAL,CAAW,eAAX,EAA4B4K,GAA5B,CAAgCH,MAAhC,CAAN;AACH,aAxBD,MAwBO;AACH,oBAAIjE,YAAYyD,IAAIC,KAApB;AACA,sBAAM,QAAKlK,KAAL,CAAW,eAAX,EAA4BC,KAA5B,CAAkC;AACpCU,8BAAU0H;AAD0B,iBAAlC,EAEHjE,MAFG,CAEI;AACNvE,mCAAe2G,UAAU4D;AADnB,iBAFJ,CAAN;AAKH;AACD;AArCgC;AAsCnC;AACD;AACMS,oBAAN,GAAyB;AAAA;;AAAA;AACrB,gBAAIxC,UAAU,QAAK3E,IAAL,CAAU,UAAV,CAAd;AACA,gBAAIiE,cAAcC,SAAS,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAhC,CAAlB;AACA,gBAAIgD,aAAa;AACb3K,8BAAc,GADD;AAEb4K,8BAAc,CAFD;AAGbC,iCAAiB,CAHJ;AAIbzF,+BAAeoC;AAJF,aAAjB;AAMA,gBAAI5H,OAAO,MAAM,QAAKC,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AACvCW,oBAAIyH;AADmC,aAA1B,EAEdjE,MAFc,CAEP0G,UAFO,CAAjB;AAGA;AACA,gBAAItE,YAAY,MAAM,QAAKxG,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AAC5CW,oBAAIyH;AADwC,aAA1B,EAEnBtH,KAFmB,CAEb,SAFa,EAEFL,IAFE,EAAtB;AAGA,gBAAIY,OAAO,MAAM,QAAKtB,KAAL,CAAW,MAAX,EAAmBC,KAAnB,CAAyB;AACtCW,oBAAI4F,UAAUjF;AADwB,aAAzB,EAEdb,IAFc,EAAjB;AAGA,gBAAIuK,SAAS3J,KAAK4J,aAAlB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAIC,YAAY,MAAM,QAAKnL,KAAL,CAAW,aAAX,EAA0BC,KAA1B,CAAgC;AAClDU,0BAAU0H;AADwC,aAAhC,EAEnBtH,KAFmB,CAEb,YAFa,EAECE,MAFD,EAAtB;AAGA,gBAAI6B,UAAU,MAAM,QAAK9C,KAAL,CAAW,eAAX,EAA4BC,KAA5B,CAAkC;AAClDU,0BAAU0H;AADwC,aAAlC,EAEjB3H,IAFiB,EAApB;AAGA;AACA,gBAAI0K,YAAY,EAAhB;AACA,gBAAID,UAAUE,MAAV,IAAoB,CAAxB,EAA2B;AACvBD,4BAAYD,UAAU,CAAV,EAAaG,UAAzB;AACH,aAFD,MAEO;AACHF,4BAAYD,UAAU,CAAV,EAAaG,UAAb,GAA0B,GAA1B,GAAgCH,UAAUE,MAA1C,GAAmD,KAA/D;AACH;AACD;AACA,gBAAIE,eAAepM,OAAOsD,IAAP,CAAYkF,WAAZ,EAAyBjF,MAAzB,CAAgC,qBAAhC,CAAnB;AACA;AACN;AACA,gBAAI8I,cAAchK,MAAMiK,MAAN,CAAa,uBAAb,CAAlB;AACM,gBAAIC,UAAU;AACV,0BAAUT,MADA;AAEV,+BAAeO,WAFL;AAGV,wBAAQ,4BAHE;AAIV,qCAAoB,QAJV;AAKV,wBAAO,OALG;AAMV,wBAAQ;AACN,8BAAU;AACN,iCAASJ;AADH,qBADJ;AAIN,6BAAS;AACL,iCAASG;AADJ,qBAJH;AAON,6BAAS;AACL,iCAASzI,QAAQE;AADZ,qBAPH;AAUN,yCAAqB;AACjB,iCAASF,QAAQjD;AADA,qBAVf;AAaN,8BAAU;AACN,iCAAS;AADH;AAbJ;AANE,aAAd;AAwBA,kBAAM8L,cAAcnK,MAAMoK,OAAN,CAAc,QAAd,EAAwB,KAAxB,CAApB;AACA,kBAAMC,QAAQ,MAAMF,YAAYG,cAAZ,EAApB;AACA,kBAAMC,MAAM,MAAMJ,YAAYK,WAAZ,CAAwBH,KAAxB,EAA8BH,OAA9B,CAAlB;AACA,mBAAO,QAAKzI,OAAL,EAAP;AAtEqB;AAuExB;AACKgJ,qBAAN,GAA0B;AAAA;;AAAA;AACtB,gBAAI5D,UAAU,QAAK3E,IAAL,CAAU,UAAV,CAAd;AACA,gBAAIoH,aAAa;AACbC,8BAAc;AADD,aAAjB;AAGA,gBAAIhL,OAAO,MAAM,QAAKC,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AACvCW,oBAAIyH;AADmC,aAA1B,EAEdjE,MAFc,CAEP0G,UAFO,CAAjB;AAGA,mBAAO,QAAK7H,OAAL,CAAalD,IAAb,CAAP;AARsB;AASzB;AACKmM,uBAAN,GAA4B;AAAA;;AAAA;AAAE;AAC1B,kBAAM7D,UAAU,QAAK5I,GAAL,CAAS,SAAT,CAAhB;AACA,kBAAM0M,SAAS,QAAK1M,GAAL,CAAS,QAAT,CAAf;AACA,kBAAM2M,aAAa,QAAK3M,GAAL,CAAS,SAAT,KAAuB,CAA1C;AACA,kBAAMI,gBAAgB,QAAKJ,GAAL,CAAS,eAAT,KAA6B,CAAnD;AACA,kBAAMO,QAAQ,QAAKA,KAAL,CAAW,OAAX,CAAd;AACA,gBAAI2H,cAAcC,SAAS,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAhC,CAAlB;AACA,gBAAIuE,cAAc,EAAlB;AACA,gBAAIF,UAAU,CAAd,EAAiB;AACb,oBAAIlC,MAAM,MAAM,QAAKjK,KAAL,CAAW,eAAX,EAA4BC,KAA5B,CAAkC;AAC9CU,8BAAU0H;AADoC,iBAAlC,EAEb3H,IAFa,EAAhB;AAGA,oBAAIc,MAAMC,OAAN,CAAcwI,GAAd,CAAJ,EAAwB;AACpB,wBAAIO,SAAS,MAAM,QAAKxK,KAAL,CAAW,SAAX,EAAsBC,KAAtB,CAA4B;AAC3CW,4BAAIwL;AADuC,qBAA5B,EAEhB1L,IAFgB,EAAnB;AAGA2L,kCAAc7B,OAAO3E,IAArB;AACA,wBAAI4E,SAAS;AACT9J,kCAAU0H,OADD;AAETqC,oCAAY0B,UAFH;AAGTpJ,sCAAcwH,OAAO3E,IAHZ;AAIT8E,sCAAcH,OAAOV,IAJZ;AAKTjK,uCAAeA,aALN;AAMT2C,kCAAUmF;AAND,qBAAb;AAQA,0BAAM,QAAK3H,KAAL,CAAW,eAAX,EAA4B4K,GAA5B,CAAgCH,MAAhC,CAAN;AACA,wBAAIK,aAAa;AACb3K,sCAAc,GADD;AAEb6K,yCAAiB,CAFJ;AAGbzF,uCAAeoC;AAHF,qBAAjB;AAKA,0BAAM,QAAK3H,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AAC5BW,4BAAIyH;AADwB,qBAA1B,EAEHjE,MAFG,CAEI0G,UAFJ,CAAN;AAGA;AACH,iBAvBD,MAuBO;AACH,wBAAIN,SAAS,MAAM,QAAKxK,KAAL,CAAW,SAAX,EAAsBC,KAAtB,CAA4B;AAC3CW,4BAAIwL;AADuC,qBAA5B,EAEhB1L,IAFgB,EAAnB;AAGA2L,kCAAc7B,OAAO3E,IAArB;AACA,wBAAI4E,SAAS;AACT9J,kCAAU0H,OADD;AAETqC,oCAAY0B,UAFH;AAGTpJ,sCAAcwH,OAAO3E,IAHZ;AAIT8E,sCAAcH,OAAOV,IAJZ;AAKTjK,uCAAeA,aALN;AAMT2C,kCAAUmF;AAND,qBAAb;AAQA,0BAAM,QAAK3H,KAAL,CAAW,eAAX,EAA4BC,KAA5B,CAAkC;AACpCU,kCAAU0H;AAD0B,qBAAlC,EAEHjE,MAFG,CAEIqG,MAFJ,CAAN;AAGH;AACJ,aA5CD,MA4CO,IAAI0B,UAAU,CAAd,EAAiB;AACpB,oBAAIrB,aAAa;AACb3K,kCAAc,GADD;AAEboF,mCAAeoC;AAFF,iBAAjB;AAIA,sBAAM,QAAK3H,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AAC5BW,wBAAIyH;AADwB,iBAA1B,EAEHjE,MAFG,CAEI0G,UAFJ,CAAN;AAGAuB,8BAAc,KAAd;AACH;AACP,kBAAM,QAAKC,eAAL,CAAqBH,MAArB,EAA4B9D,OAA5B,EAAoCgE,WAApC,EAAgDxM,aAAhD,CAAN;AA9D8B;AA+D3B;AACEyM,mBAAN,CAAsBH,MAAtB,EAA6B9D,OAA7B,EAAqCgE,WAArC,EAAiDxM,aAAjD,EAA+D;AAAA;;AAAA;AAC9D,gBAAI2G,YAAY,MAAM,QAAKxG,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AAC5CW,oBAAIyH;AADwC,aAA1B,EAEnBtH,KAFmB,CAEb,SAFa,EAEFL,IAFE,EAAtB;AAGA,gBAAIY,OAAO,MAAM,QAAKtB,KAAL,CAAW,MAAX,EAAmBC,KAAnB,CAAyB;AACtCW,oBAAI4F,UAAUjF;AADwB,aAAzB,EAEdR,KAFc,CAER,eAFQ,EAESL,IAFT,EAAjB;AAGA,gBAAIuK,SAAS3J,KAAK4J,aAAlB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAIC,YAAY,MAAM,QAAKnL,KAAL,CAAW,aAAX,EAA0BC,KAA1B,CAAgC;AAClDU,0BAAU0H;AADwC,aAAhC,EAEnBtH,KAFmB,CAEb,YAFa,EAECE,MAFD,EAAtB;AAGA;AACA,gBAAImK,YAAY,EAAhB;AACA,gBAAID,UAAUE,MAAV,IAAoB,CAAxB,EAA2B;AACvBD,4BAAYD,UAAU,CAAV,EAAaG,UAAzB;AACH,aAFD,MAEO;AACHF,4BAAYD,UAAU,CAAV,EAAaG,UAAb,GAA0B,GAA1B,GAAgCH,UAAUE,MAA1C,GAAmD,KAA/D;AACH;AACD;AACA,gBAAI1D,cAAcC,SAAS,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAhC,CAAlB;AACA,gBAAIyD,eAAepM,OAAOsD,IAAP,CAAYkF,WAAZ,EAAyBjF,MAAzB,CAAgC,qBAAhC,CAAnB;AACA;AACA;AACA,gBAAI8I,cAAchK,MAAMiK,MAAN,CAAa,uBAAb,CAAlB;AACA,gBAAIC,UAAU;AACV,0BAAUT,MADA;AAEV,+BAAeO,WAFL;AAGV,wBAAQ,4BAHE;AAIV,qCAAoB,QAJV;AAKV,wBAAO,OALG;AAMV,wBAAQ;AACN,8BAAU;AACN,iCAASJ;AADH,qBADJ;AAIN,6BAAS;AACL,iCAASG;AADJ,qBAJH;AAON,6BAAS;AACL,iCAASc;AADJ,qBAPH;AAUN,yCAAqB;AACjB,iCAASxM;AADQ,qBAVf;AAaN,8BAAU;AACN,iCAAS;AADH;AAbJ;AANE,aAAd;AAwBA,kBAAM8L,cAAcnK,MAAMoK,OAAN,CAAc,QAAd,EAAwB,KAAxB,CAApB;AACA,kBAAMC,QAAQ,MAAMF,YAAYG,cAAZ,EAApB;AACA,kBAAMC,MAAM,MAAMJ,YAAYK,WAAZ,CAAwBH,KAAxB,EAA8BH,OAA9B,CAAlB;AAvD8D;AAwD9D;AACQa,sBAAN,GAA2B;AAAA;;AAAA;AACvB,kBAAM3L,KAAK,QAAKnB,GAAL,CAAS,SAAT,CAAX;AACA,gBAAI0D,OAAO,MAAM,QAAKnD,KAAL,CAAW,eAAX,EAA4BC,KAA5B,CAAkC;AAC/CU,0BAAUC;AADqC,aAAlC,EAEdF,IAFc,EAAjB;AAGA,gBAAI,CAACc,MAAMC,OAAN,CAAc0B,IAAd,CAAL,EAA0B;AACtB,uBAAO,QAAKF,OAAL,CAAaE,IAAb,CAAP;AACH,aAFD,MAEO;AACH,uBAAO,QAAKqJ,IAAL,CAAU,GAAV,EAAe,KAAf,CAAP;AACH;AATsB;AAU1B;AACKC,qBAAN,GAA0B;AAAA;;AAAA;AACtB,kBAAMC,KAAK,QAAKhJ,IAAL,CAAU,UAAV,CAAX;AACA,kBAAMmC,OAAO,QAAKnC,IAAL,CAAU,MAAV,CAAb;AACA,kBAAMoC,SAAS,QAAKpC,IAAL,CAAU,QAAV,CAAf;AACA,kBAAMiJ,WAAW,QAAKjJ,IAAL,CAAU,UAAV,CAAjB;AACA,kBAAMkJ,aAAa,QAAKlJ,IAAL,CAAU,YAAV,CAAnB;AACA,kBAAM1B,WAAW4K,WAAW,CAAX,CAAjB;AACA,kBAAMzK,OAAOyK,WAAW,CAAX,CAAb;AACA,kBAAMvK,WAAWuK,WAAW,CAAX,CAAjB;AACA,gBAAIzJ,OAAO;AACPvD,2BAAWiG,IADJ;AAEPC,wBAAQA,MAFD;AAGPxC,yBAASqJ,QAHF;AAIP3K,0BAAUA,QAJH;AAKPG,sBAAMA,IALC;AAMPE,0BAAUA;AANH,aAAX;AAQA,kBAAMrC,QAAQ,QAAKA,KAAL,CAAW,OAAX,CAAd;AACA,kBAAMD,OAAO,MAAMC,MAAMC,KAAN,CAAY;AAC3BC,0BAAUwM;AADiB,aAAZ,EAEhBtI,MAFgB,CAETjB,IAFS,CAAnB;AAGA,mBAAO,QAAKF,OAAL,CAAalD,IAAb,CAAP;AArBsB;AAsBzB;AACK8M,eAAN,GAAoB;AAAA;;AAAA;AAChB,gBAAI,CAAC,QAAKC,MAAV,EAAkB;AACd,uBAAO,KAAP;AACH;AACD,kBAAMC,SAAS,QAAKrJ,IAAL,EAAf;AACA,kBAAM9C,KAAK,QAAK8C,IAAL,CAAU,IAAV,CAAX;AACA,kBAAM1D,QAAQ,QAAKA,KAAL,CAAW,OAAX,CAAd;AACA+M,mBAAOC,OAAP,GAAiBD,OAAOC,OAAP,GAAiB,CAAjB,GAAqB,CAAtC;AACAD,mBAAOE,MAAP,GAAgBF,OAAOE,MAAP,GAAgB,CAAhB,GAAoB,CAApC;AACA,gBAAIrM,KAAK,CAAT,EAAY;AACR,sBAAMZ,MAAMC,KAAN,CAAY;AACdW,wBAAIA;AADU,iBAAZ,EAEHwD,MAFG,CAEI2I,MAFJ,CAAN;AAGH,aAJD,MAIO;AACH,uBAAOA,OAAOnM,EAAd;AACA,sBAAMZ,MAAM4K,GAAN,CAAUmC,MAAV,CAAN;AACH;AACD,mBAAO,QAAK9J,OAAL,CAAa8J,MAAb,CAAP;AAjBgB;AAkBnB;AACKG,sBAAN,GAA2B;AAAA;;AAAA;AACvB,kBAAMvN,UAAU,QAAK+D,IAAL,CAAU,SAAV,CAAhB;AACA,kBAAM6D,QAAQ,QAAK7D,IAAL,CAAU,QAAV,CAAd;AACA,kBAAMP,OAAO,MAAM,QAAKnD,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AACzCC,0BAAUP;AAD+B,aAA1B,EAEhByE,MAFgB,CAET;AACNjE,8BAAcoH;AADR,aAFS,CAAnB;AAKA,mBAAO,QAAKtE,OAAL,CAAaE,IAAb,CAAP;AARuB;AAS1B;AACKgK,iBAAN,GAAsB;AAAA;;AAAA;AAClB,kBAAMvM,KAAK,QAAK8C,IAAL,CAAU,IAAV,CAAX;AACA,kBAAM,QAAK1D,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AAC5BW,oBAAIA;AADwB,aAA1B,EAEHwM,KAFG,CAEG,CAFH,EAEMC,MAFN,EAAN;AAGA;AACA,kBAAM,QAAKrN,KAAL,CAAW,aAAX,EAA0BC,KAA1B,CAAgC;AAClCU,0BAAUC;AADwB,aAAhC,EAEHyM,MAFG,EAAN;AAGA;AACA,mBAAO,QAAKpK,OAAL,EAAP;AAVkB;AAWrB;AACKqK,+BAAN,GAAoC;AAAA;;AAAA;AAChC,kBAAMC,WAAW,QAAK7J,IAAL,CAAU,UAAV,CAAjB;AACA,gBAAI3D,OAAO,MAAM,QAAKC,KAAL,CAAW,qBAAX,EAAkCC,KAAlC,CAAwC;AACrDsN,0BAAUA,QAD2C;AAErDvM,2BAAW;AAF0C,aAAxC,EAGdD,KAHc,CAGR,UAHQ,EAGIE,MAHJ,EAAjB;AAIA,mBAAO,QAAKgC,OAAL,CAAalD,IAAb,CAAP;AANgC;AAOnC;AA1zB+B,CAApC",
    "file": "..\\..\\..\\src\\admin\\controller\\order.js",
    "sourcesContent": [
        "const Base = require('./base.js');\r\nconst moment = require('moment');\r\nconst _ = require('lodash');\r\n// const Jushuitan = require('jushuitan');\r\nmodule.exports = class extends Base {\r\n    /**\r\n     * index action\r\n     * @return {Promise} []\r\n     */\r\n    async indexAction() {\r\n        const page = this.get('page') || 1;\r\n        const size = this.get('size') || 10;\r\n        const orderSn = this.get('orderSn') || '';\r\n        const consignee = this.get('consignee') || '';\r\n        const logistic_code = this.get('logistic_code') || '';\r\n        const status = this.get('status') || '';\r\n        let data = {}\r\n        const model = this.model('order');\r\n        if (logistic_code == '') {\r\n            data = await model.where({\r\n                order_sn: ['like', `%${orderSn}%`],\r\n                consignee: ['like', `%${consignee}%`],\r\n                order_status: ['IN', status],\r\n                order_type: ['<', 7],\r\n            }).order(['id DESC']).page(page, size).countSelect();\r\n            console.log(data);\r\n        } else {\r\n            let orderData = await this.model('order_express').where({\r\n                logistic_code: logistic_code\r\n            }).find();\r\n            let order_id = orderData.order_id;\r\n            data = await model.where({\r\n                id: order_id\r\n            }).order(['id DESC']).page(page, size).countSelect();\r\n        }\r\n        for (const item of data.data) {\r\n            item.goodsList = await this.model('order_goods').field('goods_name,goods_aka,list_pic_url,number,goods_specifition_name_value,retail_price').where({\r\n                order_id: item.id,\r\n                is_delete: 0\r\n            }).select();\r\n            item.goodsCount = 0;\r\n            item.goodsList.forEach(v => {\r\n                item.goodsCount += v.number;\r\n            });\r\n            let user = await this.model('user').where({\r\n                id: item.user_id\r\n            }).field('nickname,name,mobile,avatar').find();\r\n            if (!think.isEmpty(user)) {\r\n                user.nickname = Buffer.from(user.nickname, 'base64').toString();\r\n            } else {\r\n                user.nickname = '已删除'\r\n            }\r\n            item.userInfo = user;\r\n            let province_name = await this.model('region').where({\r\n                id: item.province\r\n            }).getField('name', true);\r\n            let city_name = await this.model('region').where({\r\n                id: item.city\r\n            }).getField('name', true);\r\n            let district_name = await this.model('region').where({\r\n                id: item.district\r\n            }).getField('name', true);\r\n            item.full_region = province_name + city_name + district_name;\r\n            item.postscript = Buffer.from(item.postscript, 'base64').toString();\r\n            item.add_time = moment.unix(item.add_time).format('YYYY-MM-DD HH:mm:ss');\r\n            if (item.pay_time != 0) {\r\n                item.pay_time = moment.unix(item.pay_time).format('YYYY-MM-DD HH:mm:ss');\r\n            } else {\r\n                item.pay_time = 0;\r\n            }\r\n            item.order_status_text = await this.model('order').getOrderStatusText(item.id);\r\n            let express = await this.model('order_express').where({\r\n                order_id: item.id\r\n            }).find();\r\n            if (!think.isEmpty(express)) {\r\n                item.expressInfo = express.shipper_name + express.logistic_code;\r\n            } else {\r\n                item.expressInfo = ''\r\n            }\r\n            // item.button_text = await this.model('order').getOrderBtnText(item.id);\r\n        }\r\n        return this.success(data);\r\n    }\r\n    async getAutoStatusAction() {\r\n        let status = await this.model('settings').where({\r\n            id: 1\r\n        }).field('autoDelivery').find();\r\n        let info = status.autoDelivery;\r\n        return this.success(info);\r\n    }\r\n    async toDeliveryAction() {\r\n        const page = this.get('page') || 1;\r\n        const size = this.get('size') || 10;\r\n        const status = this.get('status') || '';\r\n        const model = this.model('order');\r\n        const data = await model.where({\r\n            order_status: status,\r\n        }).order(['id DESC']).page(page, size).countSelect();\r\n        for (const item of data.data) {\r\n            item.goodsList = await this.model('order_goods').field('goods_name,list_pic_url,number,goods_specifition_name_value,retail_price').where({\r\n                order_id: item.id\r\n            }).select();\r\n            item.goodsCount = 0;\r\n            item.goodsList.forEach(v => {\r\n                item.goodsCount += v.number;\r\n            });\r\n            let province_name = await this.model('region').where({\r\n                id: item.province\r\n            }).getField('name', true);\r\n            let city_name = await this.model('region').where({\r\n                id: item.city\r\n            }).getField('name', true);\r\n            let district_name = await this.model('region').where({\r\n                id: item.district\r\n            }).getField('name', true);\r\n            item.address = province_name + city_name + district_name + item.address;\r\n            item.postscript = Buffer.from(item.postscript, 'base64').toString();\r\n            item.add_time = moment.unix(item.add_time).format('YYYY-MM-DD HH:mm:ss');\r\n            item.order_status_text = await this.model('order').getOrderStatusText(item.id);\r\n            item.button_text = await this.model('order').getOrderBtnText(item.id);\r\n        }\r\n        return this.success(data);\r\n    }\r\n    async saveGoodsListAction() {\r\n        // console.log(typeof(data));\r\n        let id = this.post('id');\r\n        let order_id = this.post('order_id');\r\n        let number = this.post('number');\r\n        let price = this.post('retail_price');\r\n        let addOrMinus = this.post('addOrMinus');\r\n        let changePrice = Number(number) * Number(price);\r\n        console.log(order_id);\r\n        console.log(changePrice);\r\n        if (addOrMinus == 0) {\r\n            await this.model('order_goods').where({\r\n                id: id\r\n            }).decrement('number', number);\r\n            await this.model('order').where({\r\n                id: order_id\r\n            }).decrement({\r\n                actual_price: changePrice,\r\n                order_price: changePrice,\r\n                goods_price: changePrice\r\n            });\r\n            let order_sn = this.model('order').generateOrderNumber();\r\n            await this.model('order').where({\r\n                id: order_id\r\n            }).update({\r\n                order_sn: order_sn\r\n            });\r\n            return this.success(order_sn);\r\n        } else if (addOrMinus == 1) {\r\n            await this.model('order_goods').where({\r\n                id: id\r\n            }).increment('number', number);\r\n            await this.model('order').where({\r\n                id: order_id\r\n            }).increment({\r\n                actual_price: changePrice,\r\n                order_price: changePrice,\r\n                goods_price: changePrice\r\n            });\r\n            let order_sn = this.model('order').generateOrderNumber();\r\n            await this.model('order').where({\r\n                id: order_id\r\n            }).update({\r\n                order_sn: order_sn\r\n            });\r\n            return this.success(order_sn);\r\n        }\r\n    }\r\n    async goodsListDeleteAction() {\r\n        console.log(this.post('id'));\r\n        let id = this.post('id');\r\n        let order_id = this.post('order_id');\r\n        let number = this.post('number');\r\n        let price = this.post('retail_price');\r\n        let addOrMinus = this.post('addOrMinus');\r\n        let changePrice = Number(number) * Number(price);\r\n        console.log(order_id);\r\n        console.log(changePrice);\r\n        await this.model('order_goods').where({\r\n            id: id\r\n        }).update({\r\n            is_delete: 1\r\n        });\r\n        await this.model('order').where({\r\n            id: order_id\r\n        }).decrement({\r\n            actual_price: changePrice,\r\n            order_price: changePrice,\r\n            goods_price: changePrice\r\n        });\r\n        let order_sn = this.model('order').generateOrderNumber();\r\n        await this.model('order').where({\r\n            id: order_id\r\n        }).update({\r\n            order_sn: order_sn\r\n        });\r\n        return this.success(order_sn);\r\n    }\r\n    async saveAdminMemoAction() {\r\n        const id = this.post('id');\r\n        const text = this.post('text');\r\n        const model = this.model('order');\r\n        let info = {\r\n            admin_memo: text\r\n        }\r\n        let data = await model.where({\r\n            id: id\r\n        }).update(info);\r\n        return this.success(data);\r\n    }\r\n    async savePrintInfoAction() {\r\n        const id = this.post('id');\r\n        const print_info = this.post('print_info');\r\n        const model = this.model('order');\r\n        let info = {\r\n            print_info: print_info\r\n        };\r\n        let data = await model.where({\r\n            id: id\r\n        }).update(info);\r\n        return this.success(data);\r\n    }\r\n    async saveExpressValueInfoAction() {\r\n        const id = this.post('id');\r\n        const express_value = this.post('express_value');\r\n        const model = this.model('order');\r\n        let info = {\r\n            express_value: express_value\r\n        };\r\n        let data = await model.where({\r\n            id: id\r\n        }).update(info);\r\n        return this.success(data);\r\n    }\r\n    async saveRemarkInfoAction() {\r\n        const id = this.post('id');\r\n        const remark = this.post('remark');\r\n        const model = this.model('order');\r\n        let info = {\r\n            remark: remark\r\n        };\r\n        let data = await model.where({\r\n            id: id\r\n        }).update(info);\r\n        return this.success(data);\r\n    }\r\n    async detailAction() {\r\n        const id = this.get('orderId');\r\n        const model = this.model('order');\r\n        let data = await model.where({\r\n            id: id\r\n        }).find();\r\n        data.goodsList = await this.model('order_goods').field('id,product_id,goods_name,goods_aka,list_pic_url,number,goods_specifition_name_value,retail_price,goods_id').where({\r\n            order_id: data.id,\r\n            is_delete: 0\r\n        }).select();\r\n        data.goodsCount = 0;\r\n        data.goodsList.forEach(v => {\r\n            data.goodsCount += v.number;\r\n        });\r\n        for (const item of data.goodsList) {\r\n            let info = await this.model('product').where({\r\n                id: item.product_id\r\n            }).field('goods_sn').find();\r\n            item.goods_sn = info.goods_sn;\r\n        }\r\n        console.log(data.goodsList);\r\n        let userInfo = await this.model('user').where({\r\n            id: data.user_id\r\n        }).find();\r\n        let _nickname = Buffer.from(userInfo.nickname, 'base64').toString();\r\n        data.user_name = _nickname;\r\n        data.avatar = userInfo.avatar;\r\n        let province_name = await this.model('region').where({\r\n            id: data.province\r\n        }).getField('name', true);\r\n        let city_name = await this.model('region').where({\r\n            id: data.city\r\n        }).getField('name', true);\r\n        let district_name = await this.model('region').where({\r\n            id: data.district\r\n        }).getField('name', true);\r\n        data.full_region = province_name + city_name + district_name;\r\n        data.postscript = Buffer.from(data.postscript, 'base64').toString();\r\n        data.order_status_text = await this.model('order').getOrderStatusText(data.id);\r\n        data.add_time = moment.unix(data.add_time).format('YYYY-MM-DD HH:mm:ss');\r\n        data.allAddress = data.full_region + data.address;\r\n        if (data.pay_time != 0) {\r\n            data.pay_time = moment.unix(data.pay_time).format('YYYY-MM-DD HH:mm:ss');\r\n        }\r\n        if (data.shipping_time != 0) {\r\n            data.shipping_time = moment.unix(data.shipping_time).format('YYYY-MM-DD HH:mm:ss');\r\n        }\r\n        if (data.confirm_time != 0) {\r\n            data.confirm_time = moment.unix(data.confirm_time).format('YYYY-MM-DD HH:mm:ss');\r\n        }\r\n        if (data.dealdone_time != 0) {\r\n            data.dealdone_time = moment.unix(data.dealdone_time).format('YYYY-MM-DD HH:mm:ss');\r\n        }\r\n        let def = await this.model('settings').where({\r\n            id: 1\r\n        }).find();\r\n        let senderInfo = {}\r\n        let receiveInfo = {}\r\n        receiveInfo = {\r\n            name: data.consignee,\r\n            mobile: data.mobile,\r\n            province: province_name,\r\n            province_id: data.province,\r\n            city: city_name,\r\n            city_id: data.city,\r\n            district: district_name,\r\n            district_id: data.district,\r\n            address: data.address\r\n        }\r\n        senderInfo = {\r\n            name: def.Name,\r\n            mobile: def.Tel,\r\n            province: def.ProvinceName,\r\n            city: def.CityName,\r\n            district: def.ExpAreaName,\r\n            province_id: def.province_id,\r\n            city_id: def.city_id,\r\n            district_id: def.district_id,\r\n            address: def.Address,\r\n        }\r\n        return this.success({\r\n            orderInfo: data,\r\n            receiver: receiveInfo,\r\n            sender: senderInfo\r\n        });\r\n    }\r\n    async getAllRegionAction() { // 我写的算法\r\n        const model = this.model('region');\r\n        const aData = await model.where({\r\n            type: 1\r\n        }).select();\r\n        const bData = await model.where({\r\n            type: 2\r\n        }).select();\r\n        const cData = await model.where({\r\n            type: 3\r\n        }).select();\r\n        let newData = [];\r\n        for (const item of aData) {\r\n            let children = [];\r\n            for (const bitem of bData) {\r\n                let innerChildren = [];\r\n                for (const citem of cData) {\r\n                    if (citem.parent_id == bitem.id) {\r\n                        innerChildren.push({\r\n                            value: citem.id,\r\n                            label: citem.name\r\n                        })\r\n                    }\r\n                }\r\n                if (bitem.parent_id == item.id) {\r\n                    children.push({\r\n                        value: bitem.id,\r\n                        label: bitem.name,\r\n                        children: innerChildren\r\n                    })\r\n                }\r\n            }\r\n            newData.push({\r\n                value: item.id,\r\n                label: item.name,\r\n                children: children\r\n            });\r\n        }\r\n        return this.success(newData);\r\n    }\r\n    async orderpackAction() {\r\n        const id = this.get('orderId');\r\n        const model = this.model('order');\r\n        const data = await model.where({\r\n            id: id\r\n        }).update({\r\n            order_status: 300\r\n        });\r\n    }\r\n    async orderReceiveAction() {\r\n        const id = this.get('orderId');\r\n        let currentTime = parseInt(new Date().getTime() / 1000);\r\n        const model = this.model('order');\r\n        const data = await model.where({\r\n            id: id\r\n        }).update({\r\n            order_status: 302,\r\n            shipping_time: currentTime\r\n        });\r\n    }\r\n    async orderPriceAction() {\r\n        const id = this.get('orderId');\r\n        const goodsPrice = this.get('goodsPrice');\r\n        const freightPrice = this.get('freightPrice');\r\n        const actualPrice = this.get('actualPrice');\r\n        const model = this.model('order');\r\n        const data = await model.where({\r\n            id: id\r\n        }).find();\r\n        let newData = {\r\n            actual_price: actualPrice,\r\n            freight_price: freightPrice,\r\n            goods_price: goodsPrice,\r\n            order_sn: model.generateOrderNumber()\r\n        }\r\n        await model.where({\r\n            id: id\r\n        }).update(newData);\r\n    }\r\n    async getOrderExpressAction() {\r\n        const orderId = this.post('orderId');\r\n        const latestExpressInfo = await this.model('order_express').getLatestOrderExpressByAli(orderId);\r\n        return this.success(latestExpressInfo);\r\n    }\r\n    async getPrintTestAction() {\r\n        const latestExpressInfo = await this.model('order_express').printExpress();\r\n        return this.success(latestExpressInfo);\r\n    }\r\n    async getMianExpressAction() {\r\n        const orderId = this.post('orderId');\r\n        const sender = this.post('sender');\r\n        const receiver = this.post('receiver');\r\n        console.log(orderId);\r\n        console.log(sender);\r\n        console.log(receiver);\r\n        let senderOptions = sender.senderOptions;\r\n        let receiveOptions = receiver.receiveOptions;\r\n        let senderInfo = {\r\n            Name: sender.name,\r\n            Tel: sender.mobile,\r\n            ProvinceName: await this.model('region').where({\r\n                id: senderOptions[0]\r\n            }).getField('name', true),\r\n            CityName: await this.model('region').where({\r\n                id: senderOptions[1]\r\n            }).getField('name', true),\r\n            ExpAreaName: await this.model('region').where({\r\n                id: senderOptions[2]\r\n            }).getField('name', true),\r\n            Address: sender.address\r\n        };\r\n        let receiverInfo = {\r\n            Name: receiver.name,\r\n            Tel: receiver.mobile,\r\n            ProvinceName: await this.model('region').where({\r\n                id: receiveOptions[0]\r\n            }).getField('name', true),\r\n            CityName: await this.model('region').where({\r\n                id: receiveOptions[1]\r\n            }).getField('name', true),\r\n            ExpAreaName: await this.model('region').where({\r\n                id: receiveOptions[2]\r\n            }).getField('name', true),\r\n            Address: receiver.address\r\n        };\r\n        // 每次重新生成一次订单号，这样，不会出现已经下过单的情况了。\r\n        const expressType = this.post('expressType');\r\n        const latestExpressInfo = await this.model('order_express').getMianExpress(orderId, senderInfo, receiverInfo, expressType);\r\n        console.log('lastExpressInfo++++++++++++++++++++++');\r\n        console.log(latestExpressInfo);\r\n        if (latestExpressInfo.ResultCode == 100) {\r\n            // 获取快递单号成功，然后存入order_express中\r\n            this.orderExpressAdd(latestExpressInfo, orderId)\r\n        }\r\n        return this.success({\r\n            latestExpressInfo: latestExpressInfo,\r\n            sender: senderInfo,\r\n            receiver: receiverInfo\r\n        });\r\n    }\r\n    async rePrintExpressAction() {\r\n        const date = new Date();\r\n        let orderId = this.get('orderId')\r\n        let order_sn = date.getFullYear() + _.padStart(date.getMonth(), 2, '0') + _.padStart(date.getDay(), 2, '0') + _.padStart(date.getHours(), 2, '0') + _.padStart(date.getMinutes(), 2, '0') + _.padStart(date.getSeconds(), 2, '0') + _.random(100000, 999999);\r\n        let info = await this.model('order').where({\r\n            id: orderId\r\n        }).update({\r\n            order_sn: order_sn\r\n        });\r\n        return this.success(info);\r\n    }\r\n    async directPrintExpressAction() {\r\n        let orderId = this.get('orderId')\r\n        let express = await this.model('order_express').where({\r\n            order_id: orderId\r\n        }).find();\r\n        let info = {};\r\n        if (express.express_type < 4) {\r\n            info = await this.model('shipper').where({\r\n                code: 'SF'\r\n            }).find();\r\n        } else {\r\n            info = await this.model('shipper').where({\r\n                code: 'YTO'\r\n            }).find();\r\n        }\r\n        express.MonthCode = info.MonthCode;\r\n        express.send_time = moment.unix(express.add_time).format('YYYY-MM-DD');\r\n        return this.success(express);\r\n    }\r\n    async orderExpressAdd(ele, orderId) {\r\n        let currentTime = parseInt(new Date().getTime() / 1000);\r\n        let info = await this.model('order_express').where({\r\n            order_id: orderId\r\n        }).find();\r\n        if (think.isEmpty(info)) {\r\n            let orderInfo = ele.Order;\r\n            let ShipperCode = orderInfo.ShipperCode;\r\n            let logistic_code = orderInfo.LogisticCode;\r\n            let expressType = ele.expressType;\r\n            let region_code = orderInfo.DestinatioCode;\r\n            if (expressType == 4) {\r\n                region_code = orderInfo.MarkDestination;\r\n            }\r\n            const model = this.model('order');\r\n            let kdInfo = await this.model('shipper').where({\r\n                code: ShipperCode\r\n            }).find();\r\n            let kdData = {\r\n                order_id: orderId,\r\n                shipper_id: kdInfo.id,\r\n                shipper_name: kdInfo.name,\r\n                shipper_code: ShipperCode,\r\n                logistic_code: logistic_code,\r\n                region_code: region_code,\r\n                express_type: expressType,\r\n                add_time: currentTime\r\n            };\r\n            await this.model('order_express').add(kdData);\r\n        } else {\r\n            let orderInfo = ele.Order;\r\n            await this.model('order_express').where({\r\n                order_id: orderId\r\n            }).update({\r\n                logistic_code: orderInfo.LogisticCode\r\n            });\r\n        }\r\n        // 如果生成快递单号了。然后又最后没有使用，又去生成快递单号，那么应该重新生成下订单号，用新订单号去生成快递单号，然后update掉旧的order_express\r\n    }\r\n    // 点击打印并发货按钮后，就将订单的状态改成已发货\r\n    async goDeliveryAction() {\r\n        let orderId = this.post('order_id');\r\n        let currentTime = parseInt(new Date().getTime() / 1000);\r\n        let updateData = {\r\n            order_status: 301,\r\n            print_status: 1,\r\n            shipping_status: 1,\r\n            shipping_time: currentTime\r\n        };\r\n        let data = await this.model('order').where({\r\n            id: orderId\r\n        }).update(updateData);\r\n        // 发送服务消息\r\n        let orderInfo = await this.model('order').where({\r\n            id: orderId\r\n        }).field('user_id').find();\r\n        let user = await this.model('user').where({\r\n            id: orderInfo.user_id\r\n        }).find();\r\n        let openId = user.weixin_openid;\r\n        // 物品名称\r\n        // 快递单号\r\n        // 快递公司\r\n        // 发货时间\r\n        // 温馨提示\r\n        let goodsInfo = await this.model('order_goods').where({\r\n            order_id: orderId\r\n        }).field('goods_name').select();\r\n        let express = await this.model('order_express').where({\r\n            order_id: orderId\r\n        }).find();\r\n        // 物品名称\r\n        let goodsName = '';\r\n        if (goodsInfo.length == 1) {\r\n            goodsName = goodsInfo[0].goods_name\r\n        } else {\r\n            goodsName = goodsInfo[0].goods_name + '等' + goodsInfo.length + '件商品'\r\n        }\r\n        // 支付时间\r\n        let shippingTime = moment.unix(currentTime).format('YYYY-MM-DD HH:mm:ss');\r\n        // 订单金额\r\n\t\t// 订阅消息 请先在微信小程序的官方后台设置好订阅消息模板，然后根据自己的data的字段信息，设置好data\r\n\t\tlet TEMPLATE_ID = think.config('templateId.deliveryId');\r\n        let message = {\r\n            \"touser\": openId,\r\n            \"template_id\": TEMPLATE_ID,\r\n            \"page\": '/pages/ucenter/index/index',\r\n            \"miniprogram_state\":\"formal\",\r\n            \"lang\":\"zh_CN\",\r\n            \"data\": {\r\n              \"thing7\": {\r\n                  \"value\": goodsName\r\n              },\r\n              \"date2\": {\r\n                  \"value\": shippingTime\r\n              },\r\n              \"name3\": {\r\n                  \"value\": express.shipper_name\r\n              },\r\n              \"character_string4\": {\r\n                  \"value\": express.logistic_code\r\n              } ,\r\n              \"thing9\": {\r\n                  \"value\": '签收前请检查包裹！'\r\n              }\r\n          }\r\n        }\r\n        const tokenServer = think.service('weixin', 'api');\r\n        const token = await tokenServer.getAccessToken();\r\n        const res = await tokenServer.sendMessage(token,message);\r\n        return this.success();\r\n    }\r\n    async goPrintOnlyAction() {\r\n        let orderId = this.post('order_id');\r\n        let updateData = {\r\n            print_status: 1\r\n        };\r\n        let data = await this.model('order').where({\r\n            id: orderId\r\n        }).update(updateData);\r\n        return this.success(data);\r\n    }\r\n    async orderDeliveryAction() { // 发货api\r\n        const orderId = this.get('orderId');\r\n        const method = this.get('method');\r\n        const deliveryId = this.get('shipper') || 0;\r\n        const logistic_code = this.get('logistic_code') || 0;\r\n        const model = this.model('order');\r\n        let currentTime = parseInt(new Date().getTime() / 1000);\r\n        let expressName = '';\r\n        if (method == 2) {\r\n            let ele = await this.model('order_express').where({\r\n                order_id: orderId\r\n            }).find();\r\n            if (think.isEmpty(ele)) {\r\n                let kdInfo = await this.model('shipper').where({\r\n                    id: deliveryId\r\n                }).find();\r\n                expressName = kdInfo.name;\r\n                let kdData = {\r\n                    order_id: orderId,\r\n                    shipper_id: deliveryId,\r\n                    shipper_name: kdInfo.name,\r\n                    shipper_code: kdInfo.code,\r\n                    logistic_code: logistic_code,\r\n                    add_time: currentTime\r\n                };\r\n                await this.model('order_express').add(kdData);\r\n                let updateData = {\r\n                    order_status: 301,\r\n                    shipping_status: 1,\r\n                    shipping_time: currentTime\r\n                };\r\n                await this.model('order').where({\r\n                    id: orderId\r\n                }).update(updateData);\r\n                // 发送服务消息\r\n            } else {\r\n                let kdInfo = await this.model('shipper').where({\r\n                    id: deliveryId\r\n                }).find();\r\n                expressName = kdInfo.name;\r\n                let kdData = {\r\n                    order_id: orderId,\r\n                    shipper_id: deliveryId,\r\n                    shipper_name: kdInfo.name,\r\n                    shipper_code: kdInfo.code,\r\n                    logistic_code: logistic_code,\r\n                    add_time: currentTime\r\n                }\r\n                await this.model('order_express').where({\r\n                    order_id: orderId\r\n                }).update(kdData);\r\n            }\r\n        } else if (method == 3) {\r\n            let updateData = {\r\n                order_status: 301,\r\n                shipping_time: currentTime\r\n            };\r\n            await this.model('order').where({\r\n                id: orderId\r\n            }).update(updateData);\r\n            expressName = '自提件';\r\n        }\r\n\t\tawait this.deliveryMessage(method,orderId,expressName,logistic_code);\r\n    }\r\n\tasync deliveryMessage(method,orderId,expressName,logistic_code){\r\n\t\tlet orderInfo = await this.model('order').where({\r\n\t\t    id: orderId\r\n\t\t}).field('user_id').find();\r\n\t\tlet user = await this.model('user').where({\r\n\t\t    id: orderInfo.user_id\r\n\t\t}).field('weixin_openid').find();\r\n\t\tlet openId = user.weixin_openid;\r\n\t\t// 物品名称\r\n\t\t// 快递单号\r\n\t\t// 快递公司\r\n\t\t// 发货时间\r\n\t\t// 温馨提示\r\n\t\tlet goodsInfo = await this.model('order_goods').where({\r\n\t\t    order_id: orderId\r\n\t\t}).field('goods_name').select();\r\n\t\t// 物品名称\r\n\t\tlet goodsName = '';\r\n\t\tif (goodsInfo.length == 1) {\r\n\t\t    goodsName = goodsInfo[0].goods_name\r\n\t\t} else {\r\n\t\t    goodsName = goodsInfo[0].goods_name + '等' + goodsInfo.length + '件商品'\r\n\t\t}\r\n\t\t// 支付时间\r\n\t\tlet currentTime = parseInt(new Date().getTime() / 1000);\r\n\t\tlet shippingTime = moment.unix(currentTime).format('YYYY-MM-DD HH:mm:ss');\r\n\t\t// 订单金额\r\n\t\t// 订阅消息 请先在微信小程序的官方后台设置好订阅消息模板，然后根据自己的data的字段信息，设置好data\r\n\t\tlet TEMPLATE_ID = think.config('templateId.deliveryId');\r\n\t\tlet message = {\r\n\t\t    \"touser\": openId,\r\n\t\t    \"template_id\": TEMPLATE_ID,\r\n\t\t    \"page\": '/pages/ucenter/index/index',\r\n\t\t    \"miniprogram_state\":\"formal\",\r\n\t\t    \"lang\":\"zh_CN\",\r\n\t\t    \"data\": {\r\n\t\t      \"thing7\": {\r\n\t\t          \"value\": goodsName\r\n\t\t      },\r\n\t\t      \"date2\": {\r\n\t\t          \"value\": shippingTime\r\n\t\t      },\r\n\t\t      \"name3\": {\r\n\t\t          \"value\": expressName\r\n\t\t      },\r\n\t\t      \"character_string4\": {\r\n\t\t          \"value\": logistic_code\r\n\t\t      } ,\r\n\t\t      \"thing9\": {\r\n\t\t          \"value\": '签收前请检查包裹！'\r\n\t\t      }\r\n\t\t  }\r\n\t\t}\r\n\t\tconst tokenServer = think.service('weixin', 'api');\r\n\t\tconst token = await tokenServer.getAccessToken();\r\n\t\tconst res = await tokenServer.sendMessage(token,message);\r\n\t}\r\n    async checkExpressAction() {\r\n        const id = this.get('orderId');\r\n        let info = await this.model('order_express').where({\r\n            order_id: id\r\n        }).find();\r\n        if (!think.isEmpty(info)) {\r\n            return this.success(info);\r\n        } else {\r\n            return this.fail(100, '没找到');\r\n        }\r\n    }\r\n    async saveAddressAction() {\r\n        const sn = this.post('order_sn');\r\n        const name = this.post('name');\r\n        const mobile = this.post('mobile');\r\n        const cAddress = this.post('cAddress');\r\n        const addOptions = this.post('addOptions');\r\n        const province = addOptions[0];\r\n        const city = addOptions[1];\r\n        const district = addOptions[2];\r\n        let info = {\r\n            consignee: name,\r\n            mobile: mobile,\r\n            address: cAddress,\r\n            province: province,\r\n            city: city,\r\n            district: district\r\n        }\r\n        const model = this.model('order');\r\n        const data = await model.where({\r\n            order_sn: sn\r\n        }).update(info);\r\n        return this.success(data);\r\n    }\r\n    async storeAction() {\r\n        if (!this.isPost) {\r\n            return false;\r\n        }\r\n        const values = this.post();\r\n        const id = this.post('id');\r\n        const model = this.model('order');\r\n        values.is_show = values.is_show ? 1 : 0;\r\n        values.is_new = values.is_new ? 1 : 0;\r\n        if (id > 0) {\r\n            await model.where({\r\n                id: id\r\n            }).update(values);\r\n        } else {\r\n            delete values.id;\r\n            await model.add(values);\r\n        }\r\n        return this.success(values);\r\n    }\r\n    async changeStatusAction() {\r\n        const orderSn = this.post('orderSn');\r\n        const value = this.post('status');\r\n        const info = await this.model('order').where({\r\n            order_sn: orderSn\r\n        }).update({\r\n            order_status: value\r\n        });\r\n        return this.success(info);\r\n    }\r\n    async destoryAction() {\r\n        const id = this.post('id');\r\n        await this.model('order').where({\r\n            id: id\r\n        }).limit(1).delete();\r\n        // 删除订单商品\r\n        await this.model('order_goods').where({\r\n            order_id: id\r\n        }).delete();\r\n        // TODO 事务，验证订单是否可删除（只有失效的订单才可以删除）\r\n        return this.success();\r\n    }\r\n    async getGoodsSpecificationAction() {\r\n        const goods_id = this.post('goods_id');\r\n        let data = await this.model('goods_specification').where({\r\n            goods_id: goods_id,\r\n            is_delete: 0\r\n        }).field('id,value').select();\r\n        return this.success(data);\r\n    }\r\n};"
    ]
}